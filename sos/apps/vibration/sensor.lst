   1               		.file	"sensor.c"
   2               		.arch atmega128
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 214               		.section	.progmem.data,"a",@progbits
 217               	mod_header:
 218 0000 0000      		.word	0
 219 0002 06        		.byte	6
 220 0003 00        		.skip 1,0
 221 0004 0C        		.byte	12
 222 0005 00        		.byte	0
 223 0006 0000 0000 		.skip 8,0
 223      0000 0000 
 224 000e 0000      		.word	pm(sensor_handler)
 225 0010 0000      		.word	pm(error_8)
 226 0012 6343 7732 		.ascii	"cCw2"
 227 0016 FF        		.byte	-1
 228 0017 FF        		.byte	-1
 229 0018 0000      		.word	pm(error_8)
 230 001a 6343 7732 		.ascii	"cCw2"
 231 001e FF        		.byte	-1
 232 001f FF        		.byte	-1
 233 0020 0000      		.word	pm(error_8)
 234 0022 6343 7732 		.ascii	"cCw2"
 235 0026 FF        		.byte	-1
 236 0027 FF        		.byte	-1
 237 0028 0000      		.word	pm(error_8)
 238 002a 6343 7732 		.ascii	"cCw2"
 239 002e FF        		.byte	-1
 240 002f FF        		.byte	-1
 241 0030 0000      		.word	pm(error_8)
 242 0032 6343 7732 		.ascii	"cCw2"
 243 0036 FF        		.byte	-1
 244 0037 FF        		.byte	-1
 245 0038 0000      		.word	pm(error_8)
 246 003a 6343 7732 		.ascii	"cCw2"
 247 003e FF        		.byte	-1
 248 003f FF        		.byte	-1
 249 0040 0000      		.word	pm(error_8)
 250 0042 6343 7732 		.ascii	"cCw2"
 251 0046 FF        		.byte	-1
 252 0047 FF        		.byte	-1
 253 0048 0000      		.word	pm(error_8)
 254 004a 6343 7732 		.ascii	"cCw2"
 255 004e FF        		.byte	-1
 256 004f FF        		.byte	-1
 257 0050 0000      		.word	pm(error_8)
 258 0052 6343 7732 		.ascii	"cCw2"
 259 0056 FF        		.byte	-1
 260 0057 FF        		.byte	-1
 261 0058 0000      		.word	pm(error_8)
 262 005a 6343 7732 		.ascii	"cCw2"
 263 005e FF        		.byte	-1
 264 005f FF        		.byte	-1
 265 0060 0000      		.word	pm(error_8)
 266 0062 6343 7732 		.ascii	"cCw2"
 267 0066 FF        		.byte	-1
 268 0067 FF        		.byte	-1
 269 0068 0000      		.word	pm(error_8)
 270 006a 6343 7732 		.ascii	"cCw2"
 271 006e FF        		.byte	-1
 272 006f FF        		.byte	-1
 273               		.text
 278               	sensor_handler:
   1:/Users/Administrator/sos-2x/kernel/sensor.c **** /* -*- Mode: C; tab-width:2 -*- */
   2:/Users/Administrator/sos-2x/kernel/sensor.c **** /* ex: set ts=2 shiftwidth=2 softtabstop=2 cindent: */
   3:/Users/Administrator/sos-2x/kernel/sensor.c **** /*
   4:/Users/Administrator/sos-2x/kernel/sensor.c ****  * Copyright (c) 2003 The Regents of the University of California.
   5:/Users/Administrator/sos-2x/kernel/sensor.c ****  * All rights reserved.
   6:/Users/Administrator/sos-2x/kernel/sensor.c ****  *
   7:/Users/Administrator/sos-2x/kernel/sensor.c ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Administrator/sos-2x/kernel/sensor.c ****  * modification, are permitted provided that the following conditions
   9:/Users/Administrator/sos-2x/kernel/sensor.c ****  * are met:
  10:/Users/Administrator/sos-2x/kernel/sensor.c ****  * 1. Redistributions of source code must retain the above copyright
  11:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    notice, this list of conditions and the following disclaimer.
  12:/Users/Administrator/sos-2x/kernel/sensor.c ****  * 2. Redistributions in binary form must reproduce the above
  13:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    copyright notice, this list of conditions and the following
  14:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    disclaimer in the documentation and/or other materials provided
  15:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    with the distribution.
  16:/Users/Administrator/sos-2x/kernel/sensor.c ****  * 3. All advertising materials mentioning features or use of this
  17:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    software must display the following acknowledgement:
  18:/Users/Administrator/sos-2x/kernel/sensor.c ****  *       This product includes software developed by Networked &
  19:/Users/Administrator/sos-2x/kernel/sensor.c ****  *       Embedded Systems Lab at UCLA
  20:/Users/Administrator/sos-2x/kernel/sensor.c ****  * 4. Neither the name of the University nor that of the Laboratory
  21:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    may be used to endorse or promote products derived from this
  22:/Users/Administrator/sos-2x/kernel/sensor.c ****  *    software without specific prior written permission.
  23:/Users/Administrator/sos-2x/kernel/sensor.c ****  *
  24:/Users/Administrator/sos-2x/kernel/sensor.c ****  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
  25:/Users/Administrator/sos-2x/kernel/sensor.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  26:/Users/Administrator/sos-2x/kernel/sensor.c ****  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  27:/Users/Administrator/sos-2x/kernel/sensor.c ****  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS
  28:/Users/Administrator/sos-2x/kernel/sensor.c ****  * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:/Users/Administrator/sos-2x/kernel/sensor.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:/Users/Administrator/sos-2x/kernel/sensor.c ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
  31:/Users/Administrator/sos-2x/kernel/sensor.c ****  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  32:/Users/Administrator/sos-2x/kernel/sensor.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:/Users/Administrator/sos-2x/kernel/sensor.c ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  34:/Users/Administrator/sos-2x/kernel/sensor.c ****  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  35:/Users/Administrator/sos-2x/kernel/sensor.c ****  * SUCH DAMAGE.
  36:/Users/Administrator/sos-2x/kernel/sensor.c ****  *
  37:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
  38:/Users/Administrator/sos-2x/kernel/sensor.c **** #include <sos.h>
  39:/Users/Administrator/sos-2x/kernel/sensor.c **** #include <fntable_types.h>
  40:/Users/Administrator/sos-2x/kernel/sensor.c **** #include <message.h>
  41:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifdef SOS_USE_PREEMPTION
  42:/Users/Administrator/sos-2x/kernel/sensor.c **** #include <priority.h>
  43:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
  44:/Users/Administrator/sos-2x/kernel/sensor.c **** #include "sensor.h"
  45:/Users/Administrator/sos-2x/kernel/sensor.c **** 
  46:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifndef SOS_DEBUG_SENSOR_API
  47:/Users/Administrator/sos-2x/kernel/sensor.c **** #undef DEBUG
  48:/Users/Administrator/sos-2x/kernel/sensor.c **** #define DEBUG(...)
  49:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
  50:/Users/Administrator/sos-2x/kernel/sensor.c **** //! Maximum types of sensors supported by SOS
  51:/Users/Administrator/sos-2x/kernel/sensor.c **** #define MAX_SENSOR_ID  12
  52:/Users/Administrator/sos-2x/kernel/sensor.c **** 
  53:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
  54:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief Private state of the sensor module
  55:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
  56:/Users/Administrator/sos-2x/kernel/sensor.c **** typedef struct sensor_state {
  57:/Users/Administrator/sos-2x/kernel/sensor.c **** 	sos_pid_t pid;               //! Process id of the sensor driver
  58:/Users/Administrator/sos-2x/kernel/sensor.c **** 	sos_pid_t client_pid;        //! Client module requesting the sensor data
  59:/Users/Administrator/sos-2x/kernel/sensor.c **** 	void *ctx;     //! context that is saved when the sensor is registered
  60:/Users/Administrator/sos-2x/kernel/sensor.c **** } sensor_state_t;
  61:/Users/Administrator/sos-2x/kernel/sensor.c **** static sensor_state_t st[MAX_SENSOR_ID];
  62:/Users/Administrator/sos-2x/kernel/sensor.c **** 
  63:/Users/Administrator/sos-2x/kernel/sensor.c **** // need to be declared seperatly because of how SOS does function mapping
  64:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifdef SOS_USE_PREEMPTION
  65:/Users/Administrator/sos-2x/kernel/sensor.c **** static func_cb_ptr *sensor_func_ptr;
  66:/Users/Administrator/sos-2x/kernel/sensor.c **** #else
  67:/Users/Administrator/sos-2x/kernel/sensor.c **** static func_cb_ptr sensor_func_ptr[MAX_SENSOR_ID];
  68:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
  69:/Users/Administrator/sos-2x/kernel/sensor.c **** 
  70:/Users/Administrator/sos-2x/kernel/sensor.c **** static int8_t sensor_handler(void *state, Message *msg);
  71:/Users/Administrator/sos-2x/kernel/sensor.c **** 
  72:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifndef SOS_USE_PREEMPTION
  73:/Users/Administrator/sos-2x/kernel/sensor.c **** static sos_module_t sensor_module;
  74:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
  75:/Users/Administrator/sos-2x/kernel/sensor.c **** 
  76:/Users/Administrator/sos-2x/kernel/sensor.c **** static mod_header_t mod_header SOS_MODULE_HEADER =
  77:/Users/Administrator/sos-2x/kernel/sensor.c **** {
  78:/Users/Administrator/sos-2x/kernel/sensor.c **** 	mod_id : KER_SENSOR_PID,
  79:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifdef SOS_USE_PREEMPTION
  80:/Users/Administrator/sos-2x/kernel/sensor.c **** 	state_size : sizeof(func_cb_ptr) * MAX_SENSOR_ID,
  81:/Users/Administrator/sos-2x/kernel/sensor.c **** #else
  82:/Users/Administrator/sos-2x/kernel/sensor.c **** 	state_size : 0,
  83:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
  84:/Users/Administrator/sos-2x/kernel/sensor.c **** 	num_prov_func : 0,
  85:/Users/Administrator/sos-2x/kernel/sensor.c **** 	num_sub_func : MAX_SENSOR_ID,
  86:/Users/Administrator/sos-2x/kernel/sensor.c **** 	module_handler: sensor_handler,
  87:/Users/Administrator/sos-2x/kernel/sensor.c **** 	funct : {
  88:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 0
  89:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
  90:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 1
  91:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
  92:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 2
  93:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
  94:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 3
  95:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
  96:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 4
  97:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
  98:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 5
  99:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 100:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 6
 101:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 102:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 7
 103:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 104:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 8
 105:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 106:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 9
 107:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 108:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 10
 109:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 110:/Users/Administrator/sos-2x/kernel/sensor.c **** 		// sensor 11
 111:/Users/Administrator/sos-2x/kernel/sensor.c **** 		{error_8, "cCw2", RUNTIME_PID, RUNTIME_FID},
 112:/Users/Administrator/sos-2x/kernel/sensor.c **** 	},
 113:/Users/Administrator/sos-2x/kernel/sensor.c **** };
 114:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 115:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 116:/Users/Administrator/sos-2x/kernel/sensor.c **** static int8_t sensor_handler(void *state, Message *msg)
 117:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 280               	.LM1:
 281               	/* prologue: frame size=0 */
 282               	/* prologue end (size=0) */
 118:/Users/Administrator/sos-2x/kernel/sensor.c **** 	return -EINVAL;
 119:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 284               	.LM2:
 285 0000 8AEE      		ldi r24,lo8(-22)
 286 0002 9FEF      		ldi r25,hi8(-22)
 287               	/* epilogue: frame size=0 */
 288 0004 0895      		ret
 289               	/* epilogue end (size=1) */
 290               	/* function sensor_handler size 3 (2) */
 292               	.Lscope0:
 295               	.global	sensor_init
 297               	sensor_init:
 120:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 121:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 122:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 123:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief Initialize the sensor interface
 124:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 125:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t sensor_init() {
 299               	.LM3:
 300               	/* prologue: frame size=0 */
 301               	/* prologue end (size=0) */
 302 0006 9FEF      		ldi r25,lo8(-1)
 303 0008 E0E0      		ldi r30,lo8(st)
 304 000a F0E0      		ldi r31,hi8(st)
 305 000c 8BE0      		ldi r24,lo8(11)
 306               	.L6:
 126:/Users/Administrator/sos-2x/kernel/sensor.c ****   uint8_t i;
 127:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 128:/Users/Administrator/sos-2x/kernel/sensor.c ****   for (i = 0; i < MAX_SENSOR_ID; i++){
 129:/Users/Administrator/sos-2x/kernel/sensor.c **** 		st[i].pid = NULL_PID;
 308               	.LM4:
 309 000e 9083      		st Z,r25
 130:/Users/Administrator/sos-2x/kernel/sensor.c **** 		st[i].client_pid = NULL_PID;
 311               	.LM5:
 312 0010 9183      		std Z+1,r25
 131:/Users/Administrator/sos-2x/kernel/sensor.c **** 		st[i].ctx = NULL;
 314               	.LM6:
 315 0012 1282      		std Z+2,__zero_reg__
 316 0014 1382      		std Z+3,__zero_reg__
 318               	.LM7:
 319 0016 8150      		subi r24,lo8(-(-1))
 320 0018 3496      		adiw r30,4
 321 001a 87FF      		sbrs r24,7
 322 001c F8CF      		rjmp .L6
 132:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 133:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifdef SOS_USE_PREEMPTION
 134:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ker_register_module(sos_get_header_address(mod_header));
 135:/Users/Administrator/sos-2x/kernel/sensor.c **** 	sensor_func_ptr = ker_get_module_state(KER_SENSOR_PID);
 136:/Users/Administrator/sos-2x/kernel/sensor.c **** #else
 137:/Users/Administrator/sos-2x/kernel/sensor.c **** 	sched_register_kernel_module(&sensor_module, sos_get_header_address(mod_header), sensor_func_ptr);
 324               	.LM8:
 325 001e 80E0      		ldi r24,lo8(mod_header)
 326 0020 90E0      		ldi r25,hi8(mod_header)
 327 0022 AA27      		clr r26
 328 0024 97FD      		sbrc r25,7
 329 0026 A095      		com r26
 330 0028 BA2F      		mov r27,r26
 331 002a B695      		lsr r27
 332 002c A795      		ror r26
 333 002e 9795      		ror r25
 334 0030 8795      		ror r24
 335 0032 40E0      		ldi r20,lo8(sensor_func_ptr)
 336 0034 50E0      		ldi r21,hi8(sensor_func_ptr)
 337 0036 BC01      		movw r22,r24
 338 0038 80E0      		ldi r24,lo8(sensor_module)
 339 003a 90E0      		ldi r25,hi8(sensor_module)
 340 003c 0E94 0000 		call sched_register_kernel_module
 138:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
 139:/Users/Administrator/sos-2x/kernel/sensor.c **** 	return SOS_OK;
 140:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 342               	.LM9:
 343 0040 80E0      		ldi r24,lo8(0)
 344 0042 90E0      		ldi r25,hi8(0)
 345               	/* epilogue: frame size=0 */
 346 0044 0895      		ret
 347               	/* epilogue end (size=1) */
 348               	/* function sensor_init size 32 (31) */
 353               	.Lscope1:
 360               	.global	ker_sensor_register
 362               	ker_sensor_register:
 141:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 142:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 143:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 144:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief Register a new sensor driver
 145:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 146:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_register(sos_pid_t calling_id, uint8_t sensor_id, 
 147:/Users/Administrator/sos-2x/kernel/sensor.c **** 													 uint8_t sensor_fid, void *ctx) {
 364               	.LM10:
 365               	/* prologue: frame size=0 */
 366 0046 FF92      		push r15
 367 0048 0F93      		push r16
 368 004a 1F93      		push r17
 369 004c CF93      		push r28
 370 004e DF93      		push r29
 371               	/* prologue end (size=5) */
 372 0050 F82E      		mov r15,r24
 373 0052 8901      		movw r16,r18
 148:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 149:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if (sensor_id > MAX_SENSOR_ID) {
 375               	.LM11:
 376 0054 6D30      		cpi r22,lo8(13)
 377 0056 A8F4      		brsh .L13
 150:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 151:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 152:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if(st[sensor_id].pid != NULL_PID) {
 379               	.LM12:
 380 0058 C62F      		mov r28,r22
 381 005a DD27      		clr r29
 382 005c CC0F      		lsl r28
 383 005e DD1F      		rol r29
 384 0060 CC0F      		lsl r28
 385 0062 DD1F      		rol r29
 386 0064 C050      		subi r28,lo8(-(st))
 387 0066 D040      		sbci r29,hi8(-(st))
 388 0068 8881      		ld r24,Y
 389 006a 8F3F      		cpi r24,lo8(-1)
 390 006c 19F0      		breq .L11
 153:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EBUSY;
 392               	.LM13:
 393 006e 80EF      		ldi r24,lo8(-16)
 394 0070 9FEF      		ldi r25,hi8(-16)
 395 0072 0FC0      		rjmp .L9
 396               	.L11:
 154:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 155:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 156:/Users/Administrator/sos-2x/kernel/sensor.c **** 	// try to register all necessary function calls
 157:/Users/Administrator/sos-2x/kernel/sensor.c **** 	// if any fail do cleanup
 158:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if(ker_fntable_subscribe(KER_SENSOR_PID, calling_id, sensor_fid, sensor_id) < 0) {
 398               	.LM14:
 399 0074 262F      		mov r18,r22
 400 0076 6F2D      		mov r22,r15
 401 0078 86E0      		ldi r24,lo8(6)
 402 007a 0E94 0000 		call ker_fntable_subscribe
 403 007e 87FF      		sbrs r24,7
 404 0080 03C0      		rjmp .L12
 405               	.L13:
 159:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 407               	.LM15:
 408 0082 8AEE      		ldi r24,lo8(-22)
 409 0084 9FEF      		ldi r25,hi8(-22)
 410 0086 05C0      		rjmp .L9
 411               	.L12:
 160:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 161:/Users/Administrator/sos-2x/kernel/sensor.c **** 	
 162:/Users/Administrator/sos-2x/kernel/sensor.c ****   st[sensor_id].ctx = ctx;
 413               	.LM16:
 414 0088 0A83      		std Y+2,r16
 415 008a 1B83      		std Y+3,r17
 163:/Users/Administrator/sos-2x/kernel/sensor.c ****   st[sensor_id].pid = calling_id;
 417               	.LM17:
 418 008c F882      		st Y,r15
 164:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 165:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 420               	.LM18:
 421 008e 80E0      		ldi r24,lo8(0)
 422 0090 90E0      		ldi r25,hi8(0)
 423               	.L9:
 424               	/* epilogue: frame size=0 */
 425 0092 DF91      		pop r29
 426 0094 CF91      		pop r28
 427 0096 1F91      		pop r17
 428 0098 0F91      		pop r16
 429 009a FF90      		pop r15
 430 009c 0895      		ret
 431               	/* epilogue end (size=6) */
 432               	/* function ker_sensor_register size 44 (33) */
 434               	.Lscope2:
 439               	.global	ker_sensor_deregister
 441               	ker_sensor_deregister:
 166:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 167:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 168:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 169:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 170:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief De-Register a sensor driver
 171:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 172:/Users/Administrator/sos-2x/kernel/sensor.c **** //! XXX: We are not registering the get_data function, should be de-register it ?
 173:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_deregister(sos_pid_t calling_id, uint8_t sensor_id) {
 443               	.LM19:
 444               	/* prologue: frame size=0 */
 445 009e CF93      		push r28
 446 00a0 DF93      		push r29
 447               	/* prologue end (size=2) */
 448 00a2 982F      		mov r25,r24
 174:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 175:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (st[sensor_id].pid != calling_id)) {
 450               	.LM20:
 451 00a4 6D30      		cpi r22,lo8(13)
 452 00a6 60F4      		brsh .L16
 454               	.LM21:
 455 00a8 E62F      		mov r30,r22
 456 00aa FF27      		clr r31
 457 00ac EF01      		movw r28,r30
 458 00ae CC0F      		lsl r28
 459 00b0 DD1F      		rol r29
 460 00b2 CC0F      		lsl r28
 461 00b4 DD1F      		rol r29
 462 00b6 C050      		subi r28,lo8(-(st))
 463 00b8 D040      		sbci r29,hi8(-(st))
 464 00ba 8881      		ld r24,Y
 465 00bc 8917      		cp r24,r25
 466 00be 19F0      		breq .L15
 467               	.L16:
 176:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 469               	.LM22:
 470 00c0 8AEE      		ldi r24,lo8(-22)
 471 00c2 9FEF      		ldi r25,hi8(-22)
 472 00c4 11C0      		rjmp .L14
 473               	.L15:
 177:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 178:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 179:/Users/Administrator/sos-2x/kernel/sensor.c **** 	// disable sensor before unregistering function calls
 180:/Users/Administrator/sos-2x/kernel/sensor.c ****   SOS_CALL(sensor_func_ptr[sensor_id], sensor_func_t, SENSOR_DISABLE_CMD,  st[sensor_id].ctx);
 475               	.LM23:
 476 00c6 EE0F      		add r30,r30
 477 00c8 FF1F      		adc r31,r31
 478 00ca E050      		subi r30,lo8(-(sensor_func_ptr))
 479 00cc F040      		sbci r31,hi8(-(sensor_func_ptr))
 480 00ce 4A81      		ldd r20,Y+2
 481 00d0 5B81      		ldd r21,Y+3
 482 00d2 62E0      		ldi r22,lo8(2)
 483 00d4 8081      		ld r24,Z
 484 00d6 9181      		ldd r25,Z+1
 485 00d8 0E94 4600 		call 140
 181:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 182:/Users/Administrator/sos-2x/kernel/sensor.c **** 	//sensor_func_ptr[sensor_id] = NULL;
 183:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 184:/Users/Administrator/sos-2x/kernel/sensor.c ****   st[sensor_id].pid = NULL_PID;
 487               	.LM24:
 488 00dc 8FEF      		ldi r24,lo8(-1)
 489 00de 8883      		st Y,r24
 185:/Users/Administrator/sos-2x/kernel/sensor.c ****   st[sensor_id].ctx = NULL;
 491               	.LM25:
 492 00e0 1A82      		std Y+2,__zero_reg__
 493 00e2 1B82      		std Y+3,__zero_reg__
 186:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 187:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 495               	.LM26:
 496 00e4 80E0      		ldi r24,lo8(0)
 497 00e6 90E0      		ldi r25,hi8(0)
 498               	.L14:
 499               	/* epilogue: frame size=0 */
 500 00e8 DF91      		pop r29
 501 00ea CF91      		pop r28
 502 00ec 0895      		ret
 503               	/* epilogue end (size=3) */
 504               	/* function ker_sensor_deregister size 40 (35) */
 506               	.Lscope3:
 510               	.global	ker_sensor_get_data
 512               	ker_sensor_get_data:
 188:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 189:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 190:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 191:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 192:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief Get the sensor data
 193:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 194:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifdef SOS_USE_PREEMPTION
 195:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_get_data(uint8_t sensor_id) 
 196:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 197:/Users/Administrator/sos-2x/kernel/sensor.c **** 	HAS_ATOMIC_PREEMPTION_SECTION;
 198:/Users/Administrator/sos-2x/kernel/sensor.c **** 	int8_t ret;
 199:/Users/Administrator/sos-2x/kernel/sensor.c **** 	sos_pid_t calling_id = ker_get_current_pid();
 200:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (st[sensor_id].pid == NULL_PID) || (st[sensor_id].client_pid !=
 201:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 202:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 203:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 204:/Users/Administrator/sos-2x/kernel/sensor.c **** 	st[sensor_id].client_pid = calling_id;  //changed
 205:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 206:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ATOMIC_DISABLE_PREEMPTION();
 207:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ret = SOS_CALL(sensor_func_ptr[sensor_id], sensor_func_t, SENSOR_GET_DATA_CMD, st[sensor_id].ctx);
 208:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ATOMIC_ENABLE_PREEMPTION();
 209:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if (SOS_OK != ret) {
 210:/Users/Administrator/sos-2x/kernel/sensor.c **** 		//! XXX ????
 211:/Users/Administrator/sos-2x/kernel/sensor.c **** 		st[sensor_id].client_pid = NULL_PID; //changed
 212:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 213:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 214:/Users/Administrator/sos-2x/kernel/sensor.c **** 	
 215:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 216:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 217:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 218:/Users/Administrator/sos-2x/kernel/sensor.c **** #else
 219:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_get_data(uint8_t sensor_id) 
 220:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 514               	.LM27:
 515               	/* prologue: frame size=0 */
 516 00ee 1F93      		push r17
 517 00f0 CF93      		push r28
 518 00f2 DF93      		push r29
 519               	/* prologue end (size=3) */
 520 00f4 C82F      		mov r28,r24
 221:/Users/Administrator/sos-2x/kernel/sensor.c **** 	int8_t ret;
 222:/Users/Administrator/sos-2x/kernel/sensor.c **** 	sos_pid_t calling_id = ker_get_current_pid();
 522               	.LM28:
 523 00f6 0E94 0000 		call ker_get_current_pid
 524 00fa 982F      		mov r25,r24
 223:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 224:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (st[sensor_id].pid == NULL_PID) || (st[sensor_id].client_pid !=
 526               	.LM29:
 527 00fc CD30      		cpi r28,lo8(13)
 528 00fe F0F4      		brsh .L21
 530               	.LM30:
 531 0100 EC2F      		mov r30,r28
 532 0102 FF27      		clr r31
 533 0104 EF01      		movw r28,r30
 534 0106 CC0F      		lsl r28
 535 0108 DD1F      		rol r29
 536 010a CC0F      		lsl r28
 537 010c DD1F      		rol r29
 538 010e C050      		subi r28,lo8(-(st))
 539 0110 D040      		sbci r29,hi8(-(st))
 540 0112 8881      		ld r24,Y
 541 0114 8F3F      		cpi r24,lo8(-1)
 542 0116 91F0      		breq .L21
 543 0118 1981      		ldd r17,Y+1
 544 011a 1F3F      		cpi r17,lo8(-1)
 545 011c 79F4      		brne .L21
 225:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 226:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 227:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 228:/Users/Administrator/sos-2x/kernel/sensor.c **** 	st[sensor_id].client_pid = calling_id;  //changed
 547               	.LM31:
 548 011e 9983      		std Y+1,r25
 229:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 230:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ret = SOS_CALL(sensor_func_ptr[sensor_id], sensor_func_t, SENSOR_GET_DATA_CMD, st[sensor_id].ctx);
 550               	.LM32:
 551 0120 EE0F      		add r30,r30
 552 0122 FF1F      		adc r31,r31
 553 0124 E050      		subi r30,lo8(-(sensor_func_ptr))
 554 0126 F040      		sbci r31,hi8(-(sensor_func_ptr))
 555 0128 4A81      		ldd r20,Y+2
 556 012a 5B81      		ldd r21,Y+3
 557 012c 60E0      		ldi r22,lo8(0)
 558 012e 8081      		ld r24,Z
 559 0130 9181      		ldd r25,Z+1
 560 0132 0E94 4600 		call 140
 231:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if (SOS_OK != ret) {
 562               	.LM33:
 563 0136 8823      		tst r24
 564 0138 21F0      		breq .L20
 232:/Users/Administrator/sos-2x/kernel/sensor.c **** 		//! XXX ????
 233:/Users/Administrator/sos-2x/kernel/sensor.c **** 		st[sensor_id].client_pid = NULL_PID; //changed
 566               	.LM34:
 567 013a 1983      		std Y+1,r17
 568               	.L21:
 234:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 570               	.LM35:
 571 013c 8AEE      		ldi r24,lo8(-22)
 572 013e 9FEF      		ldi r25,hi8(-22)
 573 0140 02C0      		rjmp .L17
 574               	.L20:
 235:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 236:/Users/Administrator/sos-2x/kernel/sensor.c **** 	
 237:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 238:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 576               	.LM36:
 577 0142 80E0      		ldi r24,lo8(0)
 578 0144 90E0      		ldi r25,hi8(0)
 579               	.L17:
 580               	/* epilogue: frame size=0 */
 581 0146 DF91      		pop r29
 582 0148 CF91      		pop r28
 583 014a 1F91      		pop r17
 584 014c 0895      		ret
 585               	/* epilogue end (size=4) */
 586               	/* function ker_sensor_get_data size 48 (41) */
 591               	.Lscope4:
 595               	.global	ker_sensor_enable
 597               	ker_sensor_enable:
 239:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 240:/Users/Administrator/sos-2x/kernel/sensor.c **** #endif
 241:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 242:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 243:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief enable the sensor
 244:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 245:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_enable(uint8_t sensor_id) 
 246:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 599               	.LM37:
 600               	/* prologue: frame size=0 */
 601 014e CF93      		push r28
 602 0150 DF93      		push r29
 603               	/* prologue end (size=2) */
 247:/Users/Administrator/sos-2x/kernel/sensor.c **** 	int8_t ret;
 248:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (st[sensor_id].pid == NULL_PID) || (st[sensor_id].client_pid !=
 605               	.LM38:
 606 0152 8D30      		cpi r24,lo8(13)
 607 0154 F0F4      		brsh .L26
 609               	.LM39:
 610 0156 E82F      		mov r30,r24
 611 0158 FF27      		clr r31
 612 015a DF01      		movw r26,r30
 613 015c AA0F      		lsl r26
 614 015e BB1F      		rol r27
 615 0160 AA0F      		lsl r26
 616 0162 BB1F      		rol r27
 617 0164 A050      		subi r26,lo8(-(st))
 618 0166 B040      		sbci r27,hi8(-(st))
 619 0168 8C91      		ld r24,X
 620 016a 8F3F      		cpi r24,lo8(-1)
 621 016c 91F0      		breq .L26
 622 016e ED01      		movw r28,r26
 623 0170 8981      		ldd r24,Y+1
 624 0172 8F3F      		cpi r24,lo8(-1)
 625 0174 71F4      		brne .L26
 249:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 250:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 251:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 252:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ret = SOS_CALL(sensor_func_ptr[sensor_id], sensor_func_t, SENSOR_ENABLE_CMD, st[sensor_id].ctx);
 627               	.LM40:
 628 0176 EE0F      		add r30,r30
 629 0178 FF1F      		adc r31,r31
 630 017a E050      		subi r30,lo8(-(sensor_func_ptr))
 631 017c F040      		sbci r31,hi8(-(sensor_func_ptr))
 632 017e ED01      		movw r28,r26
 633 0180 4A81      		ldd r20,Y+2
 634 0182 5B81      		ldd r21,Y+3
 635 0184 61E0      		ldi r22,lo8(1)
 636 0186 8081      		ld r24,Z
 637 0188 9181      		ldd r25,Z+1
 638 018a 0E94 4600 		call 140
 253:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if (SOS_OK != ret) {
 640               	.LM41:
 641 018e 8823      		tst r24
 642 0190 19F0      		breq .L25
 643               	.L26:
 254:/Users/Administrator/sos-2x/kernel/sensor.c **** 		//! XXX ????
 255:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 645               	.LM42:
 646 0192 8AEE      		ldi r24,lo8(-22)
 647 0194 9FEF      		ldi r25,hi8(-22)
 648 0196 02C0      		rjmp .L22
 649               	.L25:
 256:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 257:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 258:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 651               	.LM43:
 652 0198 80E0      		ldi r24,lo8(0)
 653 019a 90E0      		ldi r25,hi8(0)
 654               	.L22:
 655               	/* epilogue: frame size=0 */
 656 019c DF91      		pop r29
 657 019e CF91      		pop r28
 658 01a0 0895      		ret
 659               	/* epilogue end (size=3) */
 660               	/* function ker_sensor_enable size 42 (37) */
 662               	.Lscope5:
 666               	.global	ker_sensor_disable
 668               	ker_sensor_disable:
 259:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 260:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 261:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 262:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief disable the sensor
 263:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 264:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_disable(uint8_t sensor_id) 
 265:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 670               	.LM44:
 671               	/* prologue: frame size=0 */
 672 01a2 1F93      		push r17
 673 01a4 CF93      		push r28
 674 01a6 DF93      		push r29
 675               	/* prologue end (size=3) */
 266:/Users/Administrator/sos-2x/kernel/sensor.c **** 	int8_t ret;
 267:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (st[sensor_id].pid == NULL_PID) || (st[sensor_id].client_pid !=
 677               	.LM45:
 678 01a8 8D30      		cpi r24,lo8(13)
 679 01aa E0F4      		brsh .L31
 681               	.LM46:
 682 01ac E82F      		mov r30,r24
 683 01ae FF27      		clr r31
 684 01b0 EF01      		movw r28,r30
 685 01b2 CC0F      		lsl r28
 686 01b4 DD1F      		rol r29
 687 01b6 CC0F      		lsl r28
 688 01b8 DD1F      		rol r29
 689 01ba C050      		subi r28,lo8(-(st))
 690 01bc D040      		sbci r29,hi8(-(st))
 691 01be 8881      		ld r24,Y
 692 01c0 8F3F      		cpi r24,lo8(-1)
 693 01c2 81F0      		breq .L31
 694 01c4 1981      		ldd r17,Y+1
 695 01c6 1F3F      		cpi r17,lo8(-1)
 696 01c8 69F4      		brne .L31
 268:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 269:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 270:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 271:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ret = SOS_CALL(sensor_func_ptr[sensor_id], sensor_func_t, SENSOR_DISABLE_CMD, st[sensor_id].ctx);
 698               	.LM47:
 699 01ca EE0F      		add r30,r30
 700 01cc FF1F      		adc r31,r31
 701 01ce E050      		subi r30,lo8(-(sensor_func_ptr))
 702 01d0 F040      		sbci r31,hi8(-(sensor_func_ptr))
 703 01d2 4A81      		ldd r20,Y+2
 704 01d4 5B81      		ldd r21,Y+3
 705 01d6 62E0      		ldi r22,lo8(2)
 706 01d8 8081      		ld r24,Z
 707 01da 9181      		ldd r25,Z+1
 708 01dc 0E94 4600 		call 140
 272:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if (SOS_OK != ret) {
 710               	.LM48:
 711 01e0 8823      		tst r24
 712 01e2 19F0      		breq .L30
 713               	.L31:
 273:/Users/Administrator/sos-2x/kernel/sensor.c **** 		//! XXX ????
 274:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 715               	.LM49:
 716 01e4 8AEE      		ldi r24,lo8(-22)
 717 01e6 9FEF      		ldi r25,hi8(-22)
 718 01e8 03C0      		rjmp .L27
 719               	.L30:
 275:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 276:/Users/Administrator/sos-2x/kernel/sensor.c **** 	st[sensor_id].client_pid = NULL_PID;
 721               	.LM50:
 722 01ea 1983      		std Y+1,r17
 277:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 278:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 724               	.LM51:
 725 01ec 80E0      		ldi r24,lo8(0)
 726 01ee 90E0      		ldi r25,hi8(0)
 727               	.L27:
 728               	/* epilogue: frame size=0 */
 729 01f0 DF91      		pop r29
 730 01f2 CF91      		pop r28
 731 01f4 1F91      		pop r17
 732 01f6 0895      		ret
 733               	/* epilogue end (size=4) */
 734               	/* function ker_sensor_disable size 43 (36) */
 736               	.Lscope6:
 741               	.global	ker_sensor_control
 743               	ker_sensor_control:
 279:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 280:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 281:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 282:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief reconfigure the sensor
 283:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 284:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_control(uint8_t sensor_id, void* sensor_new_state) 
 285:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 745               	.LM52:
 746               	/* prologue: frame size=0 */
 747 01f8 CF93      		push r28
 748 01fa DF93      		push r29
 749               	/* prologue end (size=2) */
 750 01fc AB01      		movw r20,r22
 286:/Users/Administrator/sos-2x/kernel/sensor.c **** 	int8_t ret;
 287:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (st[sensor_id].pid == NULL_PID) || (st[sensor_id].client_pid !=
 752               	.LM53:
 753 01fe 8D30      		cpi r24,lo8(13)
 754 0200 D8F4      		brsh .L36
 756               	.LM54:
 757 0202 E82F      		mov r30,r24
 758 0204 FF27      		clr r31
 759 0206 DF01      		movw r26,r30
 760 0208 AA0F      		lsl r26
 761 020a BB1F      		rol r27
 762 020c AA0F      		lsl r26
 763 020e BB1F      		rol r27
 764 0210 A050      		subi r26,lo8(-(st))
 765 0212 B040      		sbci r27,hi8(-(st))
 766 0214 8C91      		ld r24,X
 767 0216 8F3F      		cpi r24,lo8(-1)
 768 0218 79F0      		breq .L36
 769 021a ED01      		movw r28,r26
 770 021c 8981      		ldd r24,Y+1
 771 021e 8F3F      		cpi r24,lo8(-1)
 772 0220 59F4      		brne .L36
 288:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 289:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 290:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 291:/Users/Administrator/sos-2x/kernel/sensor.c **** 	ret = SOS_CALL(sensor_func_ptr[sensor_id], sensor_func_t, SENSOR_CONFIG_CMD, sensor_new_state);
 774               	.LM55:
 775 0222 EE0F      		add r30,r30
 776 0224 FF1F      		adc r31,r31
 777 0226 E050      		subi r30,lo8(-(sensor_func_ptr))
 778 0228 F040      		sbci r31,hi8(-(sensor_func_ptr))
 779 022a 63E0      		ldi r22,lo8(3)
 780 022c 8081      		ld r24,Z
 781 022e 9181      		ldd r25,Z+1
 782 0230 0E94 4600 		call 140
 292:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if (SOS_OK != ret) {
 784               	.LM56:
 785 0234 8823      		tst r24
 786 0236 19F0      		breq .L35
 787               	.L36:
 293:/Users/Administrator/sos-2x/kernel/sensor.c **** 		//! XXX ????
 294:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 789               	.LM57:
 790 0238 8AEE      		ldi r24,lo8(-22)
 791 023a 9FEF      		ldi r25,hi8(-22)
 792 023c 02C0      		rjmp .L32
 793               	.L35:
 295:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 296:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 297:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 795               	.LM58:
 796 023e 80E0      		ldi r24,lo8(0)
 797 0240 90E0      		ldi r25,hi8(0)
 798               	.L32:
 799               	/* epilogue: frame size=0 */
 800 0242 DF91      		pop r29
 801 0244 CF91      		pop r28
 802 0246 0895      		ret
 803               	/* epilogue end (size=3) */
 804               	/* function ker_sensor_control size 40 (35) */
 806               	.Lscope7:
 812               	.global	ker_sensor_data_ready
 814               	ker_sensor_data_ready:
 298:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 299:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 300:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 301:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 302:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 303:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 304:/Users/Administrator/sos-2x/kernel/sensor.c **** /**
 305:/Users/Administrator/sos-2x/kernel/sensor.c ****  * @brief The data ready message to the application
 306:/Users/Administrator/sos-2x/kernel/sensor.c ****  */
 307:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t ker_sensor_data_ready(uint8_t sensor_id, uint16_t sensor_data, uint8_t status) {
 816               	.LM59:
 817               	/* prologue: frame size=0 */
 818 0248 EF92      		push r14
 819 024a FF92      		push r15
 820 024c 0F93      		push r16
 821 024e 1F93      		push r17
 822 0250 CF93      		push r28
 823 0252 DF93      		push r29
 824               	/* prologue end (size=6) */
 825 0254 282F      		mov r18,r24
 826 0256 8B01      		movw r16,r22
 308:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 309:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((sensor_id > MAX_SENSOR_ID) || (NULL_PID == st[sensor_id].pid) || (NULL_PID == st[sensor_id].c
 828               	.LM60:
 829 0258 8D30      		cpi r24,lo8(13)
 830 025a 78F4      		brsh .L39
 832               	.LM61:
 833 025c C82F      		mov r28,r24
 834 025e DD27      		clr r29
 835 0260 FE01      		movw r30,r28
 836 0262 EE0F      		lsl r30
 837 0264 FF1F      		rol r31
 838 0266 EE0F      		lsl r30
 839 0268 FF1F      		rol r31
 840 026a E050      		subi r30,lo8(-(st))
 841 026c F040      		sbci r31,hi8(-(st))
 842 026e 8081      		ld r24,Z
 843 0270 8F3F      		cpi r24,lo8(-1)
 844 0272 19F0      		breq .L39
 845 0274 8181      		ldd r24,Z+1
 846 0276 8F3F      		cpi r24,lo8(-1)
 847 0278 19F4      		brne .L38
 848               	.L39:
 310:/Users/Administrator/sos-2x/kernel/sensor.c **** 		return -EINVAL;
 850               	.LM62:
 851 027a 8AEE      		ldi r24,lo8(-22)
 852 027c 9FEF      		ldi r25,hi8(-22)
 853 027e 1AC0      		rjmp .L37
 854               	.L38:
 311:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 312:/Users/Administrator/sos-2x/kernel/sensor.c **** 	
 313:/Users/Administrator/sos-2x/kernel/sensor.c **** 	//! There is no need to make this message a high priority one as it is the sampling which needs to
 314:/Users/Administrator/sos-2x/kernel/sensor.c **** 	if ((0x3f & status) != 0) {
 856               	.LM63:
 857 0280 E42E      		mov r14,r20
 858 0282 FF24      		clr r15
 859 0284 9FE3      		ldi r25,lo8(63)
 860 0286 E922      		and r14,r25
 861 0288 FF24      		clr r15
 862 028a E114      		cp r14,__zero_reg__
 863 028c F104      		cpc r15,__zero_reg__
 864 028e 21F0      		breq .L40
 315:/Users/Administrator/sos-2x/kernel/sensor.c **** 		post_short(st[sensor_id].client_pid, KER_SENSOR_PID, MSG_ERROR, sensor_id, sensor_data, 0);
 866               	.LM64:
 867 0290 EE24      		clr r14
 868 0292 FF24      		clr r15
 869 0294 4FE0      		ldi r20,lo8(15)
 870 0296 01C0      		rjmp .L42
 871               	.L40:
 316:/Users/Administrator/sos-2x/kernel/sensor.c **** 	} else {
 317:/Users/Administrator/sos-2x/kernel/sensor.c **** 		post_short(st[sensor_id].client_pid, KER_SENSOR_PID, MSG_DATA_READY, sensor_id, sensor_data, 0);
 873               	.LM65:
 874 0298 44E0      		ldi r20,lo8(4)
 875               	.L42:
 876 029a 66E0      		ldi r22,lo8(6)
 877 029c 0E94 0000 		call post_short
 318:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 319:/Users/Administrator/sos-2x/kernel/sensor.c **** 	st[sensor_id].client_pid = NULL_PID;
 879               	.LM66:
 880 02a0 CC0F      		lsl r28
 881 02a2 DD1F      		rol r29
 882 02a4 CC0F      		lsl r28
 883 02a6 DD1F      		rol r29
 884 02a8 C050      		subi r28,lo8(-(st))
 885 02aa D040      		sbci r29,hi8(-(st))
 886 02ac 8FEF      		ldi r24,lo8(-1)
 887 02ae 8983      		std Y+1,r24
 320:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 321:/Users/Administrator/sos-2x/kernel/sensor.c ****   return SOS_OK;
 889               	.LM67:
 890 02b0 80E0      		ldi r24,lo8(0)
 891 02b2 90E0      		ldi r25,hi8(0)
 892               	.L37:
 893               	/* epilogue: frame size=0 */
 894 02b4 DF91      		pop r29
 895 02b6 CF91      		pop r28
 896 02b8 1F91      		pop r17
 897 02ba 0F91      		pop r16
 898 02bc FF90      		pop r15
 899 02be EF90      		pop r14
 900 02c0 0895      		ret
 901               	/* epilogue end (size=7) */
 902               	/* function ker_sensor_data_ready size 61 (48) */
 904               	.Lscope8:
 908               	.global	sensor_remove_all
 910               	sensor_remove_all:
 322:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 323:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 324:/Users/Administrator/sos-2x/kernel/sensor.c **** #ifndef NEW_SENSING_API
 325:/Users/Administrator/sos-2x/kernel/sensor.c **** int8_t sensor_remove_all(sos_pid_t pid)
 326:/Users/Administrator/sos-2x/kernel/sensor.c **** {
 912               	.LM68:
 913               	/* prologue: frame size=0 */
 914 02c2 0F93      		push r16
 915 02c4 1F93      		push r17
 916 02c6 CF93      		push r28
 917 02c8 DF93      		push r29
 918               	/* prologue end (size=4) */
 919 02ca 082F      		mov r16,r24
 327:/Users/Administrator/sos-2x/kernel/sensor.c **** 	uint8_t i;
 328:/Users/Administrator/sos-2x/kernel/sensor.c **** 
 329:/Users/Administrator/sos-2x/kernel/sensor.c **** 	for(i = 0; i < MAX_SENSOR_ID; i++) {
 921               	.LM69:
 922 02cc 10E0      		ldi r17,lo8(0)
 923 02ce C0E0      		ldi r28,lo8(st)
 924 02d0 D0E0      		ldi r29,hi8(st)
 925               	.L48:
 330:/Users/Administrator/sos-2x/kernel/sensor.c **** 		if(st[i].pid == pid) {
 927               	.LM70:
 928 02d2 8881      		ld r24,Y
 929 02d4 2496      		adiw r28,4
 930 02d6 8017      		cp r24,r16
 931 02d8 19F4      		brne .L46
 331:/Users/Administrator/sos-2x/kernel/sensor.c **** 			ker_sensor_deregister(st[i].pid, i);
 933               	.LM71:
 934 02da 612F      		mov r22,r17
 935 02dc 0E94 0000 		call ker_sensor_deregister
 936               	.L46:
 938               	.LM72:
 939 02e0 1F5F      		subi r17,lo8(-(1))
 940 02e2 1C30      		cpi r17,lo8(12)
 941 02e4 B0F3      		brlo .L48
 332:/Users/Administrator/sos-2x/kernel/sensor.c **** 		}
 333:/Users/Administrator/sos-2x/kernel/sensor.c **** 	}
 334:/Users/Administrator/sos-2x/kernel/sensor.c **** 	return SOS_OK;
 335:/Users/Administrator/sos-2x/kernel/sensor.c **** }
 943               	.LM73:
 944 02e6 80E0      		ldi r24,lo8(0)
 945 02e8 90E0      		ldi r25,hi8(0)
 946               	/* epilogue: frame size=0 */
 947 02ea DF91      		pop r29
 948 02ec CF91      		pop r28
 949 02ee 1F91      		pop r17
 950 02f0 0F91      		pop r16
 951 02f2 0895      		ret
 952               	/* epilogue end (size=5) */
 953               	/* function sensor_remove_all size 25 (16) */
 958               	.Lscope9:
 960               		.lcomm st,48
 961               		.lcomm sensor_func_ptr,24
 962               		.lcomm sensor_module,8
 967               		.text
 969               	Letext:
 970               	/* File "/Users/Administrator/sos-2x/kernel/sensor.c": code  378 = 0x017a ( 314), prologues  27, ep
DEFINED SYMBOLS
                            *ABS*:00000000 sensor.c
                            *ABS*:0000003f __SREG__
                            *ABS*:0000003e __SP_H__
                            *ABS*:0000003d __SP_L__
                            *ABS*:00000000 __tmp_reg__
                            *ABS*:00000001 __zero_reg__
/var/tmp//ccc03Gis.s:217    .progmem.data:00000000 mod_header
/var/tmp//ccc03Gis.s:278    .text:00000000 sensor_handler
/var/tmp//ccc03Gis.s:297    .text:00000006 sensor_init
                             .bss:00000000 st
/var/tmp//ccc03Gis.s:960    .bss:00000030 sensor_func_ptr
/var/tmp//ccc03Gis.s:961    .bss:00000048 sensor_module
/var/tmp//ccc03Gis.s:362    .text:00000046 ker_sensor_register
/var/tmp//ccc03Gis.s:441    .text:0000009e ker_sensor_deregister
/var/tmp//ccc03Gis.s:512    .text:000000ee ker_sensor_get_data
/var/tmp//ccc03Gis.s:597    .text:0000014e ker_sensor_enable
/var/tmp//ccc03Gis.s:668    .text:000001a2 ker_sensor_disable
/var/tmp//ccc03Gis.s:743    .text:000001f8 ker_sensor_control
/var/tmp//ccc03Gis.s:814    .text:00000248 ker_sensor_data_ready
/var/tmp//ccc03Gis.s:910    .text:000002c2 sensor_remove_all
/var/tmp//ccc03Gis.s:969    .text:000002f4 Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
error_8
sched_register_kernel_module
ker_fntable_subscribe
ker_get_current_pid
post_short
