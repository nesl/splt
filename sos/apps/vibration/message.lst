   1               		.file	"message.c"
   2               		.arch atmega128
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 188               	.global	post_short
 190               	post_short:
   1:/Users/Administrator/sos-2x/kernel/message.c **** /* -*- Mode: C; tab-width:4 -*- */
   2:/Users/Administrator/sos-2x/kernel/message.c **** /* ex: set ts=4 shiftwidth=4 softtabstop=4 cindent: */
   3:/Users/Administrator/sos-2x/kernel/message.c **** /*
   4:/Users/Administrator/sos-2x/kernel/message.c ****  * Copyright (c) 2003 The Regents of the University of California.
   5:/Users/Administrator/sos-2x/kernel/message.c ****  * All rights reserved.
   6:/Users/Administrator/sos-2x/kernel/message.c ****  *
   7:/Users/Administrator/sos-2x/kernel/message.c ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Administrator/sos-2x/kernel/message.c ****  * modification, are permitted provided that the following conditions
   9:/Users/Administrator/sos-2x/kernel/message.c ****  * are met:
  10:/Users/Administrator/sos-2x/kernel/message.c ****  * 1. Redistributions of source code must retain the above copyright
  11:/Users/Administrator/sos-2x/kernel/message.c ****  *    notice, this list of conditions and the following disclaimer.
  12:/Users/Administrator/sos-2x/kernel/message.c ****  * 2. Redistributions in binary form must reproduce the above
  13:/Users/Administrator/sos-2x/kernel/message.c ****  *    copyright notice, this list of conditions and the following
  14:/Users/Administrator/sos-2x/kernel/message.c ****  *    disclaimer in the documentation and/or other materials provided
  15:/Users/Administrator/sos-2x/kernel/message.c ****  *    with the distribution.
  16:/Users/Administrator/sos-2x/kernel/message.c ****  * 3. All advertising materials mentioning features or use of this
  17:/Users/Administrator/sos-2x/kernel/message.c ****  *    software must display the following acknowledgement:
  18:/Users/Administrator/sos-2x/kernel/message.c ****  *       This product includes software developed by Networked &
  19:/Users/Administrator/sos-2x/kernel/message.c ****  *       Embedded Systems Lab at UCLA
  20:/Users/Administrator/sos-2x/kernel/message.c ****  * 4. Neither the name of the University nor that of the Laboratory
  21:/Users/Administrator/sos-2x/kernel/message.c ****  *    may be used to endorse or promote products derived from this
  22:/Users/Administrator/sos-2x/kernel/message.c ****  *    software without specific prior written permission.
  23:/Users/Administrator/sos-2x/kernel/message.c ****  *
  24:/Users/Administrator/sos-2x/kernel/message.c ****  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
  25:/Users/Administrator/sos-2x/kernel/message.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  26:/Users/Administrator/sos-2x/kernel/message.c ****  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  27:/Users/Administrator/sos-2x/kernel/message.c ****  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS
  28:/Users/Administrator/sos-2x/kernel/message.c ****  * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:/Users/Administrator/sos-2x/kernel/message.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:/Users/Administrator/sos-2x/kernel/message.c ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
  31:/Users/Administrator/sos-2x/kernel/message.c ****  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  32:/Users/Administrator/sos-2x/kernel/message.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:/Users/Administrator/sos-2x/kernel/message.c ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  34:/Users/Administrator/sos-2x/kernel/message.c ****  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  35:/Users/Administrator/sos-2x/kernel/message.c ****  * SUCH DAMAGE.
  36:/Users/Administrator/sos-2x/kernel/message.c ****  *
  37:/Users/Administrator/sos-2x/kernel/message.c ****  */
  38:/Users/Administrator/sos-2x/kernel/message.c **** /**
  39:/Users/Administrator/sos-2x/kernel/message.c ****  * @brief message handling routines
  40:/Users/Administrator/sos-2x/kernel/message.c ****  * @author Simon Han (simonhan@ee.ucla.edu)
  41:/Users/Administrator/sos-2x/kernel/message.c ****  *
  42:/Users/Administrator/sos-2x/kernel/message.c ****  * The routines here are meant to simplify message
  43:/Users/Administrator/sos-2x/kernel/message.c ****  * posting.  Application writer can always
  44:/Users/Administrator/sos-2x/kernel/message.c ****  * fill in message and use post() or call()
  45:/Users/Administrator/sos-2x/kernel/message.c ****  *
  46:/Users/Administrator/sos-2x/kernel/message.c ****  * Simplified interfaces to these functions can be found in message_net.c
  47:/Users/Administrator/sos-2x/kernel/message.c ****  *
  48:/Users/Administrator/sos-2x/kernel/message.c ****  */
  49:/Users/Administrator/sos-2x/kernel/message.c **** #include <string.h>
  50:/Users/Administrator/sos-2x/kernel/message.c **** #include <sos_sched.h>
  51:/Users/Administrator/sos-2x/kernel/message.c **** #include <malloc.h>
  52:/Users/Administrator/sos-2x/kernel/message.c **** #include <message_types.h>
  53:/Users/Administrator/sos-2x/kernel/message.c **** #include <message_queue.h>
  54:/Users/Administrator/sos-2x/kernel/message.c **** #include <sos_info.h>
  55:/Users/Administrator/sos-2x/kernel/message.c **** #include <message.h>
  56:/Users/Administrator/sos-2x/kernel/message.c **** #include <sos_logging.h>
  57:/Users/Administrator/sos-2x/kernel/message.c **** #ifdef SOS_USE_PREEMPTION
  58:/Users/Administrator/sos-2x/kernel/message.c **** #include <priority.h>
  59:/Users/Administrator/sos-2x/kernel/message.c **** #endif
  60:/Users/Administrator/sos-2x/kernel/message.c **** 
  61:/Users/Administrator/sos-2x/kernel/message.c **** //----------------------------------------------------------------------------
  62:/Users/Administrator/sos-2x/kernel/message.c **** //  Typedefs
  63:/Users/Administrator/sos-2x/kernel/message.c **** //----------------------------------------------------------------------------
  64:/Users/Administrator/sos-2x/kernel/message.c **** 
  65:/Users/Administrator/sos-2x/kernel/message.c **** //----------------------------------------------------------------------------
  66:/Users/Administrator/sos-2x/kernel/message.c **** //  Global data declarations
  67:/Users/Administrator/sos-2x/kernel/message.c **** //----------------------------------------------------------------------------
  68:/Users/Administrator/sos-2x/kernel/message.c **** 
  69:/Users/Administrator/sos-2x/kernel/message.c **** //----------------------------------------------------------------------------
  70:/Users/Administrator/sos-2x/kernel/message.c **** //  Funcation declarations
  71:/Users/Administrator/sos-2x/kernel/message.c **** //----------------------------------------------------------------------------
  72:/Users/Administrator/sos-2x/kernel/message.c **** // Post a message with no payload
  73:/Users/Administrator/sos-2x/kernel/message.c **** int8_t post_short(sos_pid_t did, sos_pid_t sid, uint8_t type, uint8_t byte,
  74:/Users/Administrator/sos-2x/kernel/message.c **** 				  uint16_t word, uint16_t flag)
  75:/Users/Administrator/sos-2x/kernel/message.c **** {
 192               	.LM1:
 193               	/* prologue: frame size=0 */
 194 0000 BF92      		push r11
 195 0002 CF92      		push r12
 196 0004 DF92      		push r13
 197 0006 EF92      		push r14
 198 0008 FF92      		push r15
 199 000a 0F93      		push r16
 200 000c 1F93      		push r17
 201 000e CF93      		push r28
 202               	/* prologue end (size=8) */
 203 0010 D82E      		mov r13,r24
 204 0012 C62E      		mov r12,r22
 205 0014 C42F      		mov r28,r20
 206 0016 B22E      		mov r11,r18
  76:/Users/Administrator/sos-2x/kernel/message.c ****   Message *m = msg_create();
 208               	.LM2:
 209 0018 0E94 0000 		call msg_create
 210 001c FC01      		movw r30,r24
  77:/Users/Administrator/sos-2x/kernel/message.c ****   MsgParam *p;
  78:/Users/Administrator/sos-2x/kernel/message.c ****   if(m == NULL){
 212               	.LM3:
 213 001e 892B      		or r24,r25
 214 0020 19F4      		brne .L2
  79:/Users/Administrator/sos-2x/kernel/message.c **** 	return -ENOMEM;
 216               	.LM4:
 217 0022 84EF      		ldi r24,lo8(-12)
 218 0024 9FEF      		ldi r25,hi8(-12)
 219 0026 1EC0      		rjmp .L1
 220               	.L2:
  80:/Users/Administrator/sos-2x/kernel/message.c ****   }
  81:/Users/Administrator/sos-2x/kernel/message.c ****   m->daddr = node_address;
 222               	.LM5:
 223 0028 8091 0000 		lds r24,node_address
 224 002c 9091 0000 		lds r25,(node_address)+1
 225 0030 8283      		std Z+2,r24
 226 0032 9383      		std Z+3,r25
  82:/Users/Administrator/sos-2x/kernel/message.c ****   m->did = did;
 228               	.LM6:
 229 0034 D082      		st Z,r13
  83:/Users/Administrator/sos-2x/kernel/message.c ****   m->type = type;
 231               	.LM7:
 232 0036 C683      		std Z+6,r28
  84:/Users/Administrator/sos-2x/kernel/message.c ****   m->saddr = node_address;
 234               	.LM8:
 235 0038 8091 0000 		lds r24,node_address
 236 003c 9091 0000 		lds r25,(node_address)+1
 237 0040 8483      		std Z+4,r24
 238 0042 9583      		std Z+5,r25
  85:/Users/Administrator/sos-2x/kernel/message.c ****   m->sid = sid;
 240               	.LM9:
 241 0044 C182      		std Z+1,r12
  86:/Users/Administrator/sos-2x/kernel/message.c ****   m->len = 3;
 243               	.LM10:
 244 0046 83E0      		ldi r24,lo8(3)
 245 0048 8783      		std Z+7,r24
  87:/Users/Administrator/sos-2x/kernel/message.c **** #ifdef SOS_USE_PREEMPTION
  88:/Users/Administrator/sos-2x/kernel/message.c ****   // assign priority based on did
  89:/Users/Administrator/sos-2x/kernel/message.c ****   m->priority = get_module_priority(did);
  90:/Users/Administrator/sos-2x/kernel/message.c **** #endif
  91:/Users/Administrator/sos-2x/kernel/message.c ****   p = (MsgParam*)(m->payload);
  92:/Users/Administrator/sos-2x/kernel/message.c ****   p->byte = byte;
 247               	.LM11:
 248 004a B486      		std Z+12,r11
  93:/Users/Administrator/sos-2x/kernel/message.c ****   p->word = word;
 250               	.LM12:
 251 004c 0587      		std Z+13,r16
 252 004e 1687      		std Z+14,r17
  94:/Users/Administrator/sos-2x/kernel/message.c ****   m->flag = flag & ((sos_ker_flag_t)(~SOS_MSG_RELEASE));
 254               	.LM13:
 255 0050 8BEF      		ldi r24,lo8(251)
 256 0052 E822      		and r14,r24
 257 0054 FF24      		clr r15
 258 0056 E286      		std Z+10,r14
 259 0058 F386      		std Z+11,r15
  95:/Users/Administrator/sos-2x/kernel/message.c ****   sched_msg_alloc(m);
 261               	.LM14:
 262 005a CF01      		movw r24,r30
 263 005c 0E94 0000 		call sched_msg_alloc
  96:/Users/Administrator/sos-2x/kernel/message.c ****   ker_log( SOS_LOG_POST_SHORT, sid, did ); 
  97:/Users/Administrator/sos-2x/kernel/message.c ****   return SOS_OK;
 265               	.LM15:
 266 0060 80E0      		ldi r24,lo8(0)
 267 0062 90E0      		ldi r25,hi8(0)
 268               	.L1:
 269               	/* epilogue: frame size=0 */
 270 0064 CF91      		pop r28
 271 0066 1F91      		pop r17
 272 0068 0F91      		pop r16
 273 006a FF90      		pop r15
 274 006c EF90      		pop r14
 275 006e DF90      		pop r13
 276 0070 CF90      		pop r12
 277 0072 BF90      		pop r11
 278 0074 0895      		ret
 279               	/* epilogue end (size=9) */
 280               	/* function post_short size 59 (42) */
 285               	.Lscope0:
 295               	.global	post_longer
 297               	post_longer:
  98:/Users/Administrator/sos-2x/kernel/message.c **** }
  99:/Users/Administrator/sos-2x/kernel/message.c **** 
 100:/Users/Administrator/sos-2x/kernel/message.c **** // Post a message with payload and source address
 101:/Users/Administrator/sos-2x/kernel/message.c **** int8_t post_longer(sos_pid_t did, sos_pid_t sid, uint8_t type, uint8_t len,
 102:/Users/Administrator/sos-2x/kernel/message.c **** 				   void *data, uint16_t flag, uint16_t saddr)
 103:/Users/Administrator/sos-2x/kernel/message.c **** {
 299               	.LM16:
 300               	/* prologue: frame size=0 */
 301 0076 9F92      		push r9
 302 0078 AF92      		push r10
 303 007a BF92      		push r11
 304 007c CF92      		push r12
 305 007e DF92      		push r13
 306 0080 EF92      		push r14
 307 0082 FF92      		push r15
 308 0084 0F93      		push r16
 309 0086 1F93      		push r17
 310 0088 CF93      		push r28
 311               	/* prologue end (size=10) */
 312 008a B82E      		mov r11,r24
 313 008c 962E      		mov r9,r22
 314 008e C42F      		mov r28,r20
 315 0090 A22E      		mov r10,r18
 104:/Users/Administrator/sos-2x/kernel/message.c ****   Message *m = msg_create();
 317               	.LM17:
 318 0092 0E94 0000 		call msg_create
 319 0096 FC01      		movw r30,r24
 105:/Users/Administrator/sos-2x/kernel/message.c ****   if(m == NULL){
 321               	.LM18:
 322 0098 892B      		or r24,r25
 323 009a 49F4      		brne .L4
 106:/Users/Administrator/sos-2x/kernel/message.c **** 	if(flag_msg_release(flag)){
 325               	.LM19:
 326 009c E2FE      		sbrs r14,2
 327 009e 04C0      		rjmp .L5
 328               	.LBB2:
 329               	.LBB3:
 331               	.Ltext1:
   1:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /* -*- Mode: C; tab-width:4 -*- */
   2:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /* ex: set ts=4: */
   3:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /*
   4:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Copyright (c) 2003 The Regents of the University of California.
   5:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * All rights reserved.
   6:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *
   7:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * modification, are permitted provided that the following conditions
   9:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * are met:
  10:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 1. Redistributions of source code must retain the above copyright
  11:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    notice, this list of conditions and the following disclaimer.
  12:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 2. Redistributions in binary form must reproduce the above
  13:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    copyright notice, this list of conditions and the following
  14:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    disclaimer in the documentation and/or other materials provided
  15:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    with the distribution.
  16:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 3. All advertising materials mentioning features or use of this
  17:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    software must display the following acknowledgement:
  18:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *       This product includes software developed by Networked &
  19:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *       Embedded Systems Lab at UCLA
  20:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 4. Neither the name of the University nor that of the Laboratory
  21:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    may be used to endorse or promote products derived from this
  22:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    software without specific prior written permission.
  23:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *
  24:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
  25:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  26:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  27:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS
  28:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
  31:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  32:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  34:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  35:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * SUCH DAMAGE.
  36:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *
  37:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief    Allocte and free dynamic memory 
  38:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @author   Roy Shea (roy@cs.ucla.edu) 
  39:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  40:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #ifndef _MALLOC_H_
  41:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #define _MALLOC_H_
  42:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  43:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <sos_types.h>
  44:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <pid.h>
  45:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <malloc_conf.h>
  46:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <sos_module_types.h>
  47:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #ifdef FAULT_TOLERANT_SOS
  48:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <malloc_domains.h>
  49:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #endif
  50:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  51:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  52:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Init function for memory manager
  53:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  54:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void mem_init(void);
  55:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  56:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  57:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Starting memory module interface
  58:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  59:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void mem_start(void);
  60:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  61:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  62:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Allocate a chunk of blocks from the heap
  63:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  64:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void *sos_blk_mem_alloc(uint16_t size, sos_pid_t id, bool bCallFromModule);
  65:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  66:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  67:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Free a block back into the heap
  68:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  69:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void sos_blk_mem_free(void* ptr, bool bCallFromModule);
  70:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  71:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  72:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Re-allocate a block of memory from the heap
  73:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  74:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void *sos_blk_mem_realloc(void* pntr, uint16_t newSize, bool bCallFromModule);
  75:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  76:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  77:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Change memory ownership of a segment of memory
  78:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  79:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern int8_t sos_blk_mem_change_own(void* ptr, sos_pid_t id, bool bCallFromModule);
  80:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  81:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  82:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Allocate a block of memory for long term usage
  83:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  84:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void *sos_blk_mem_longterm_alloc(uint16_t size, sos_pid_t id, bool bCallFromModule);
  85:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  86:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  87:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  88:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Allocate dynamic memory
  89:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param size Number of bytes to allocate
  90:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param id Node responsible for the memory
  91:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return Returns a pointer to the allocated memory.
  92:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Will return a NULL pointer if the call to sys_malloc fails.
  93:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  94:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline void *ker_malloc(uint16_t size, sos_pid_t id)
  95:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
  96:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   return sos_blk_mem_alloc(size, id, false);
  97:/Users/Administrator/sos-2x/kernel/include/malloc.h **** }
  98:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  99:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
 100:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Reallocate dynamic memory
 101:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param pntr Pointer to the currently held block of memory
 102:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param newSize Number of bytes to be allocated
 103:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return Returns the pointer to the reallocated memory.
 104:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Returns a NULL if unable to reallocate but the original pointer is still valid.
 105:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
 106:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline void* ker_realloc(void* pntr, uint16_t newSize)
 107:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
 108:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   return sos_blk_mem_realloc(pntr, newSize, false);
 109:/Users/Administrator/sos-2x/kernel/include/malloc.h **** }
 110:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
 111:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
 112:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Free memory pointed to by ptr
 113:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param ptr Pointer to the memory that should be released
 114:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return void
 115:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
 116:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline void ker_free(void* ptr)
 117:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
 118:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   sos_blk_mem_free(ptr, false);
 333               	.LM20:
 334 00a0 60E0      		ldi r22,lo8(0)
 335 00a2 C801      		movw r24,r16
 336 00a4 0E94 0000 		call sos_blk_mem_free
 337               	.L5:
 338               	.LBE3:
 339               	.LBE2:
 341               	.Ltext2:
 107:/Users/Administrator/sos-2x/kernel/message.c **** 	  ker_free(data);
 108:/Users/Administrator/sos-2x/kernel/message.c **** 	}
 109:/Users/Administrator/sos-2x/kernel/message.c **** 	return -ENOMEM;
 343               	.LM21:
 344 00a8 84EF      		ldi r24,lo8(-12)
 345 00aa 9FEF      		ldi r25,hi8(-12)
 346 00ac 15C0      		rjmp .L3
 347               	.L4:
 110:/Users/Administrator/sos-2x/kernel/message.c ****   }
 111:/Users/Administrator/sos-2x/kernel/message.c ****   m->daddr = node_address;
 349               	.LM22:
 350 00ae 8091 0000 		lds r24,node_address
 351 00b2 9091 0000 		lds r25,(node_address)+1
 352 00b6 8283      		std Z+2,r24
 353 00b8 9383      		std Z+3,r25
 112:/Users/Administrator/sos-2x/kernel/message.c ****   m->did = did;
 355               	.LM23:
 356 00ba B082      		st Z,r11
 113:/Users/Administrator/sos-2x/kernel/message.c ****   m->type = type;
 358               	.LM24:
 359 00bc C683      		std Z+6,r28
 114:/Users/Administrator/sos-2x/kernel/message.c ****   m->saddr = saddr;
 361               	.LM25:
 362 00be C482      		std Z+4,r12
 363 00c0 D582      		std Z+5,r13
 115:/Users/Administrator/sos-2x/kernel/message.c ****   m->sid = sid;
 365               	.LM26:
 366 00c2 9182      		std Z+1,r9
 116:/Users/Administrator/sos-2x/kernel/message.c ****   m->len = len;
 368               	.LM27:
 369 00c4 A782      		std Z+7,r10
 117:/Users/Administrator/sos-2x/kernel/message.c ****   m->data = (uint8_t*)data;
 371               	.LM28:
 372 00c6 0087      		std Z+8,r16
 373 00c8 1187      		std Z+9,r17
 118:/Users/Administrator/sos-2x/kernel/message.c **** #ifdef SOS_USE_PREEMPTION
 119:/Users/Administrator/sos-2x/kernel/message.c ****   // assign priority based on priority of id
 120:/Users/Administrator/sos-2x/kernel/message.c ****   m->priority = get_module_priority(did);
 121:/Users/Administrator/sos-2x/kernel/message.c **** #endif
 122:/Users/Administrator/sos-2x/kernel/message.c ****   m->flag = flag;
 375               	.LM29:
 376 00ca E286      		std Z+10,r14
 377 00cc F386      		std Z+11,r15
 123:/Users/Administrator/sos-2x/kernel/message.c ****   sched_msg_alloc(m);
 379               	.LM30:
 380 00ce CF01      		movw r24,r30
 381 00d0 0E94 0000 		call sched_msg_alloc
 124:/Users/Administrator/sos-2x/kernel/message.c ****   ker_log( SOS_LOG_POST_LONG, sid, did ); 
 125:/Users/Administrator/sos-2x/kernel/message.c ****   return SOS_OK;
 383               	.LM31:
 384 00d4 80E0      		ldi r24,lo8(0)
 385 00d6 90E0      		ldi r25,hi8(0)
 386               	.L3:
 387               	/* epilogue: frame size=0 */
 388 00d8 CF91      		pop r28
 389 00da 1F91      		pop r17
 390 00dc 0F91      		pop r16
 391 00de FF90      		pop r15
 392 00e0 EF90      		pop r14
 393 00e2 DF90      		pop r13
 394 00e4 CF90      		pop r12
 395 00e6 BF90      		pop r11
 396 00e8 AF90      		pop r10
 397 00ea 9F90      		pop r9
 398 00ec 0895      		ret
 399               	/* epilogue end (size=11) */
 400               	/* function post_longer size 60 (39) */
 405               	.Lscope1:
 414               	.global	post_long
 416               	post_long:
 126:/Users/Administrator/sos-2x/kernel/message.c **** }
 127:/Users/Administrator/sos-2x/kernel/message.c **** 
 128:/Users/Administrator/sos-2x/kernel/message.c **** // Post a message with payload
 129:/Users/Administrator/sos-2x/kernel/message.c **** int8_t post_long(sos_pid_t did, sos_pid_t sid, uint8_t type, uint8_t len,
 130:/Users/Administrator/sos-2x/kernel/message.c **** 				 void *data, uint16_t flag)
 131:/Users/Administrator/sos-2x/kernel/message.c **** {
 418               	.LM32:
 419               	/* prologue: frame size=0 */
 420 00ee CF92      		push r12
 421 00f0 DF92      		push r13
 422 00f2 EF92      		push r14
 423 00f4 FF92      		push r15
 424 00f6 0F93      		push r16
 425 00f8 1F93      		push r17
 426               	/* prologue end (size=6) */
 427 00fa 762F      		mov r23,r22
 428 00fc 642F      		mov r22,r20
 429 00fe 922F      		mov r25,r18
 132:/Users/Administrator/sos-2x/kernel/message.c ****     return post_longer(did, sid,
 431               	.LM33:
 432 0100 C090 0000 		lds r12,node_address
 433 0104 D090 0000 		lds r13,(node_address)+1
 434 0108 292F      		mov r18,r25
 435 010a 462F      		mov r20,r22
 436 010c 672F      		mov r22,r23
 437 010e 0E94 0000 		call post_longer
 133:/Users/Administrator/sos-2x/kernel/message.c **** 					   type, len,
 134:/Users/Administrator/sos-2x/kernel/message.c **** 					   data, flag,
 135:/Users/Administrator/sos-2x/kernel/message.c **** 					   node_address);
 136:/Users/Administrator/sos-2x/kernel/message.c **** }
 439               	.LM34:
 440 0112 9927      		clr r25
 441 0114 87FD      		sbrc r24,7
 442 0116 9095      		com r25
 443               	/* epilogue: frame size=0 */
 444 0118 1F91      		pop r17
 445 011a 0F91      		pop r16
 446 011c FF90      		pop r15
 447 011e EF90      		pop r14
 448 0120 DF90      		pop r13
 449 0122 CF90      		pop r12
 450 0124 0895      		ret
 451               	/* epilogue end (size=7) */
 452               	/* function post_long size 28 (15) */
 454               	.Lscope2:
 462               	.global	ker_sys_post
 464               	ker_sys_post:
 137:/Users/Administrator/sos-2x/kernel/message.c **** 
 138:/Users/Administrator/sos-2x/kernel/message.c **** int8_t ker_sys_post(sos_pid_t did, uint8_t type, uint8_t size, void *data, 
 139:/Users/Administrator/sos-2x/kernel/message.c **** 		uint16_t flag)
 140:/Users/Administrator/sos-2x/kernel/message.c **** {
 466               	.LM35:
 467               	/* prologue: frame size=0 */
 468 0126 9F92      		push r9
 469 0128 AF92      		push r10
 470 012a BF92      		push r11
 471 012c CF92      		push r12
 472 012e DF92      		push r13
 473 0130 EF92      		push r14
 474 0132 FF92      		push r15
 475 0134 0F93      		push r16
 476 0136 1F93      		push r17
 477 0138 CF93      		push r28
 478               	/* prologue end (size=10) */
 479 013a 982E      		mov r9,r24
 480 013c A62E      		mov r10,r22
 481 013e B42E      		mov r11,r20
 482 0140 6901      		movw r12,r18
 141:/Users/Administrator/sos-2x/kernel/message.c **** 	sos_pid_t my_id = ker_get_current_pid();
 484               	.LM36:
 485 0142 0E94 0000 		call ker_get_current_pid
 486 0146 C82F      		mov r28,r24
 142:/Users/Administrator/sos-2x/kernel/message.c **** 	if(post_long(did, my_id, type, size, data, flag) != SOS_OK )
 488               	.LM37:
 489 0148 7801      		movw r14,r16
 490 014a 8601      		movw r16,r12
 491 014c 2B2D      		mov r18,r11
 492 014e 4A2D      		mov r20,r10
 493 0150 682F      		mov r22,r24
 494 0152 892D      		mov r24,r9
 495 0154 0E94 0000 		call post_long
 496 0158 8823      		tst r24
 497 015a 39F0      		breq .L9
 143:/Users/Administrator/sos-2x/kernel/message.c **** 	{
 144:/Users/Administrator/sos-2x/kernel/message.c **** 		return ker_mod_panic(my_id);
 499               	.LM38:
 500 015c 8C2F      		mov r24,r28
 501 015e 0E94 0000 		call ker_mod_panic
 502 0162 9927      		clr r25
 503 0164 87FD      		sbrc r24,7
 504 0166 9095      		com r25
 505 0168 02C0      		rjmp .L8
 506               	.L9:
 145:/Users/Administrator/sos-2x/kernel/message.c **** 	}
 146:/Users/Administrator/sos-2x/kernel/message.c **** 	return SOS_OK;
 508               	.LM39:
 509 016a 80E0      		ldi r24,lo8(0)
 510 016c 90E0      		ldi r25,hi8(0)
 511               	.L8:
 512               	/* epilogue: frame size=0 */
 513 016e CF91      		pop r28
 514 0170 1F91      		pop r17
 515 0172 0F91      		pop r16
 516 0174 FF90      		pop r15
 517 0176 EF90      		pop r14
 518 0178 DF90      		pop r13
 519 017a CF90      		pop r12
 520 017c BF90      		pop r11
 521 017e AF90      		pop r10
 522 0180 9F90      		pop r9
 523 0182 0895      		ret
 524               	/* epilogue end (size=11) */
 525               	/* function ker_sys_post size 47 (26) */
 530               	.Lscope3:
 535               	.global	ker_msg_take_data
 537               	ker_msg_take_data:
 147:/Users/Administrator/sos-2x/kernel/message.c **** }
 148:/Users/Administrator/sos-2x/kernel/message.c **** 
 149:/Users/Administrator/sos-2x/kernel/message.c **** 
 150:/Users/Administrator/sos-2x/kernel/message.c **** uint8_t *ker_msg_take_data(sos_pid_t pid, Message *msg_in)
 151:/Users/Administrator/sos-2x/kernel/message.c **** {
 539               	.LM40:
 540               	/* prologue: frame size=0 */
 541 0184 0F93      		push r16
 542 0186 1F93      		push r17
 543 0188 CF93      		push r28
 544 018a DF93      		push r29
 545               	/* prologue end (size=4) */
 546 018c 282F      		mov r18,r24
 547 018e FB01      		movw r30,r22
 152:/Users/Administrator/sos-2x/kernel/message.c ****   uint8_t *ret;
 153:/Users/Administrator/sos-2x/kernel/message.c ****   Message *msg;   //!< message we will be taking data out
 154:/Users/Administrator/sos-2x/kernel/message.c **** 
 155:/Users/Administrator/sos-2x/kernel/message.c ****   if(msg_in->type == MSG_PKT_SENDDONE) {
 549               	.LM41:
 550 0190 8681      		ldd r24,Z+6
 551 0192 8330      		cpi r24,lo8(3)
 552 0194 19F4      		brne .L11
 156:/Users/Administrator/sos-2x/kernel/message.c **** 	msg = (Message*) (msg_in->data);
 554               	.LM42:
 555 0196 C085      		ldd r28,Z+8
 556 0198 D185      		ldd r29,Z+9
 557 019a 01C0      		rjmp .L12
 558               	.L11:
 157:/Users/Administrator/sos-2x/kernel/message.c ****   } else {
 158:/Users/Administrator/sos-2x/kernel/message.c **** 	msg = msg_in;
 560               	.LM43:
 561 019c EB01      		movw r28,r22
 562               	.L12:
 159:/Users/Administrator/sos-2x/kernel/message.c ****   }
 160:/Users/Administrator/sos-2x/kernel/message.c ****   if(flag_msg_release(msg->flag)) {
 564               	.LM44:
 565 019e 8A85      		ldd r24,Y+10
 566 01a0 9B85      		ldd r25,Y+11
 567 01a2 82FF      		sbrs r24,2
 568 01a4 11C0      		rjmp .L13
 569               	.LBB4:
 570               	.LBB5:
 572               	.Ltext3:
 119:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   return;
 120:/Users/Administrator/sos-2x/kernel/include/malloc.h **** }
 121:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
 122:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
 123:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Change the ownership of memory
 124:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param ptr Pointer to the memory whose ownership is being transferred
 125:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param id New owner of the memeory
 126:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return SOS_OK or error code upon fail
 127:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Add check to prevent a change of ownership to the 'null' user.
 128:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
 129:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline int8_t ker_change_own(void* ptr, sos_pid_t id)
 130:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
 131:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   return sos_blk_mem_change_own(ptr, id, false);
 574               	.LM45:
 575 01a6 40E0      		ldi r20,lo8(0)
 576 01a8 622F      		mov r22,r18
 577 01aa 8885      		ldd r24,Y+8
 578 01ac 9985      		ldd r25,Y+9
 579 01ae 0E94 0000 		call sos_blk_mem_change_own
 580               	.LBE5:
 581               	.LBE4:
 583               	.Ltext4:
 161:/Users/Administrator/sos-2x/kernel/message.c **** 	ker_change_own((void*)msg->data, pid);
 162:/Users/Administrator/sos-2x/kernel/message.c **** 	ret = msg->data;
 585               	.LM46:
 586 01b2 0885      		ldd r16,Y+8
 587 01b4 1985      		ldd r17,Y+9
 163:/Users/Administrator/sos-2x/kernel/message.c **** 	msg->len = 0;
 589               	.LM47:
 590 01b6 1F82      		std Y+7,__zero_reg__
 164:/Users/Administrator/sos-2x/kernel/message.c **** 	msg->data = NULL;
 592               	.LM48:
 593 01b8 1886      		std Y+8,__zero_reg__
 594 01ba 1986      		std Y+9,__zero_reg__
 165:/Users/Administrator/sos-2x/kernel/message.c **** 	msg->flag &= ~(SOS_MSG_RELEASE);
 596               	.LM49:
 597 01bc 8A85      		ldd r24,Y+10
 598 01be 9B85      		ldd r25,Y+11
 599 01c0 8B7F      		andi r24,lo8(-5)
 600 01c2 8A87      		std Y+10,r24
 601 01c4 9B87      		std Y+11,r25
 602 01c6 12C0      		rjmp .L18
 603               	.L13:
 604               	.LBB6:
 606               	.Ltext5:
 608               	.LM50:
 609 01c8 8F81      		ldd r24,Y+7
 610               	.LBB7:
 612               	.LM51:
 613 01ca 40E0      		ldi r20,lo8(0)
 614 01cc 622F      		mov r22,r18
 615 01ce 9927      		clr r25
 616 01d0 0E94 0000 		call sos_blk_mem_alloc
 617 01d4 8C01      		movw r16,r24
 618               	.LBE7:
 619               	.LBE6:
 621               	.Ltext6:
 166:/Users/Administrator/sos-2x/kernel/message.c **** 	return ret;
 167:/Users/Administrator/sos-2x/kernel/message.c ****   } else {
 168:/Users/Administrator/sos-2x/kernel/message.c **** 	ret = (uint8_t*)ker_malloc(msg->len, pid);
 169:/Users/Administrator/sos-2x/kernel/message.c **** 	if(ret == NULL) return NULL;
 623               	.LM52:
 624 01d6 892B      		or r24,r25
 625 01d8 49F0      		breq .L18
 170:/Users/Administrator/sos-2x/kernel/message.c **** 	memcpy(ret, msg->data, msg->len);
 627               	.LM53:
 628 01da 8F81      		ldd r24,Y+7
 629 01dc 9927      		clr r25
 630 01de 2885      		ldd r18,Y+8
 631 01e0 3985      		ldd r19,Y+9
 632 01e2 AC01      		movw r20,r24
 633 01e4 B901      		movw r22,r18
 634 01e6 C801      		movw r24,r16
 635 01e8 0E94 0000 		call memcpy
 636               	.L18:
 171:/Users/Administrator/sos-2x/kernel/message.c **** 	return ret;
 638               	.LM54:
 639 01ec C801      		movw r24,r16
 640               	/* epilogue: frame size=0 */
 641 01ee DF91      		pop r29
 642 01f0 CF91      		pop r28
 643 01f2 1F91      		pop r17
 644 01f4 0F91      		pop r16
 645 01f6 0895      		ret
 646               	/* epilogue end (size=5) */
 647               	/* function ker_msg_take_data size 59 (50) */
 653               	.Lscope4:
 657               	.global	ker_sys_msg_take_data
 659               	ker_sys_msg_take_data:
 172:/Users/Administrator/sos-2x/kernel/message.c ****   }
 173:/Users/Administrator/sos-2x/kernel/message.c **** }
 174:/Users/Administrator/sos-2x/kernel/message.c **** 
 175:/Users/Administrator/sos-2x/kernel/message.c **** void* ker_sys_msg_take_data(Message *msg)
 176:/Users/Administrator/sos-2x/kernel/message.c **** {
 661               	.LM55:
 662               	/* prologue: frame size=0 */
 663 01f8 FF92      		push r15
 664 01fa 0F93      		push r16
 665 01fc 1F93      		push r17
 666 01fe CF93      		push r28
 667 0200 DF93      		push r29
 668               	/* prologue end (size=5) */
 669 0202 8C01      		movw r16,r24
 177:/Users/Administrator/sos-2x/kernel/message.c **** 	sos_pid_t my_id = ker_get_current_pid();
 671               	.LM56:
 672 0204 0E94 0000 		call ker_get_current_pid
 673 0208 F82E      		mov r15,r24
 178:/Users/Administrator/sos-2x/kernel/message.c **** 	void *ret = ker_msg_take_data(my_id, msg);
 675               	.LM57:
 676 020a B801      		movw r22,r16
 677 020c 0E94 0000 		call ker_msg_take_data
 678 0210 EC01      		movw r28,r24
 179:/Users/Administrator/sos-2x/kernel/message.c **** 	if( ret != NULL ) {
 680               	.LM58:
 681 0212 892B      		or r24,r25
 682 0214 19F4      		brne .L21
 180:/Users/Administrator/sos-2x/kernel/message.c **** 		return ret;
 181:/Users/Administrator/sos-2x/kernel/message.c **** 	}
 182:/Users/Administrator/sos-2x/kernel/message.c **** #ifndef SOS_TEST_SUITE
 183:/Users/Administrator/sos-2x/kernel/message.c **** 	ker_mod_panic(my_id);
 684               	.LM59:
 685 0216 8F2D      		mov r24,r15
 686 0218 0E94 0000 		call ker_mod_panic
 687               	.L21:
 184:/Users/Administrator/sos-2x/kernel/message.c **** #endif
 185:/Users/Administrator/sos-2x/kernel/message.c **** 	return NULL;
 689               	.LM60:
 690 021c CE01      		movw r24,r28
 691               	/* epilogue: frame size=0 */
 692 021e DF91      		pop r29
 693 0220 CF91      		pop r28
 694 0222 1F91      		pop r17
 695 0224 0F91      		pop r16
 696 0226 FF90      		pop r15
 697 0228 0895      		ret
 698               	/* epilogue end (size=6) */
 699               	/* function ker_sys_msg_take_data size 25 (14) */
 705               	.Lscope5:
 712               	.global	ker_sys_post_value
 714               	ker_sys_post_value:
 186:/Users/Administrator/sos-2x/kernel/message.c **** }
 187:/Users/Administrator/sos-2x/kernel/message.c **** 
 188:/Users/Administrator/sos-2x/kernel/message.c **** 
 189:/Users/Administrator/sos-2x/kernel/message.c **** int8_t ker_sys_post_value(sos_pid_t dst_mod_id,                
 190:/Users/Administrator/sos-2x/kernel/message.c **** 		                uint8_t type, uint32_t data, uint16_t flag)
 191:/Users/Administrator/sos-2x/kernel/message.c **** {
 716               	.LM61:
 717               	/* prologue: frame size=0 */
 718 022a AF92      		push r10
 719 022c BF92      		push r11
 720 022e CF92      		push r12
 721 0230 DF92      		push r13
 722 0232 EF92      		push r14
 723 0234 FF92      		push r15
 724 0236 0F93      		push r16
 725 0238 1F93      		push r17
 726 023a CF93      		push r28
 727 023c DF93      		push r29
 728               	/* prologue end (size=10) */
 729 023e B82E      		mov r11,r24
 730 0240 A62E      		mov r10,r22
 731 0242 6901      		movw r12,r18
 732 0244 7A01      		movw r14,r20
 192:/Users/Administrator/sos-2x/kernel/message.c **** 	Message *m = msg_create();
 734               	.LM62:
 735 0246 0E94 0000 		call msg_create
 736 024a EC01      		movw r28,r24
 193:/Users/Administrator/sos-2x/kernel/message.c **** 	sos_pid_t my_id = ker_get_current_pid();
 738               	.LM63:
 739 024c 0E94 0000 		call ker_get_current_pid
 740 0250 282F      		mov r18,r24
 194:/Users/Administrator/sos-2x/kernel/message.c **** 	if(m == NULL){ 
 742               	.LM64:
 743 0252 2097      		sbiw r28,0
 744 0254 31F4      		brne .L23
 195:/Users/Administrator/sos-2x/kernel/message.c **** 		return ker_mod_panic(my_id);
 746               	.LM65:
 747 0256 0E94 0000 		call ker_mod_panic
 748 025a 9927      		clr r25
 749 025c 87FD      		sbrc r24,7
 750 025e 9095      		com r25
 751 0260 20C0      		rjmp .L22
 752               	.L23:
 196:/Users/Administrator/sos-2x/kernel/message.c **** 	}
 197:/Users/Administrator/sos-2x/kernel/message.c **** 	m->daddr = node_address;
 754               	.LM66:
 755 0262 8091 0000 		lds r24,node_address
 756 0266 9091 0000 		lds r25,(node_address)+1
 757 026a 8A83      		std Y+2,r24
 758 026c 9B83      		std Y+3,r25
 198:/Users/Administrator/sos-2x/kernel/message.c **** 	m->did = dst_mod_id;
 760               	.LM67:
 761 026e B882      		st Y,r11
 199:/Users/Administrator/sos-2x/kernel/message.c **** 	m->type = type;
 763               	.LM68:
 764 0270 AE82      		std Y+6,r10
 200:/Users/Administrator/sos-2x/kernel/message.c **** 	m->saddr = node_address;
 766               	.LM69:
 767 0272 8091 0000 		lds r24,node_address
 768 0276 9091 0000 		lds r25,(node_address)+1
 769 027a 8C83      		std Y+4,r24
 770 027c 9D83      		std Y+5,r25
 201:/Users/Administrator/sos-2x/kernel/message.c **** 	m->sid = my_id;
 772               	.LM70:
 773 027e 2983      		std Y+1,r18
 202:/Users/Administrator/sos-2x/kernel/message.c **** 	m->len = 4;
 775               	.LM71:
 776 0280 84E0      		ldi r24,lo8(4)
 777 0282 8F83      		std Y+7,r24
 203:/Users/Administrator/sos-2x/kernel/message.c **** 	*((uint32_t*)(m->data)) = data;
 779               	.LM72:
 780 0284 E885      		ldd r30,Y+8
 781 0286 F985      		ldd r31,Y+9
 782 0288 C082      		st Z,r12
 783 028a D182      		std Z+1,r13
 784 028c E282      		std Z+2,r14
 785 028e F382      		std Z+3,r15
 204:/Users/Administrator/sos-2x/kernel/message.c **** #ifdef SOS_USE_PREEMPTION
 205:/Users/Administrator/sos-2x/kernel/message.c **** 	// assign priority based on did
 206:/Users/Administrator/sos-2x/kernel/message.c **** 	m->priority = get_module_priority(dst_mod_id);
 207:/Users/Administrator/sos-2x/kernel/message.c **** #endif
 208:/Users/Administrator/sos-2x/kernel/message.c **** 	m->flag = flag & ((sos_ker_flag_t)(~SOS_MSG_RELEASE));
 787               	.LM73:
 788 0290 0B7F      		andi r16,lo8(251)
 789 0292 1070      		andi r17,hi8(251)
 790 0294 0A87      		std Y+10,r16
 791 0296 1B87      		std Y+11,r17
 209:/Users/Administrator/sos-2x/kernel/message.c **** 	sched_msg_alloc(m);
 793               	.LM74:
 794 0298 CE01      		movw r24,r28
 795 029a 0E94 0000 		call sched_msg_alloc
 210:/Users/Administrator/sos-2x/kernel/message.c **** 
 211:/Users/Administrator/sos-2x/kernel/message.c **** 	return SOS_OK;
 797               	.LM75:
 798 029e 80E0      		ldi r24,lo8(0)
 799 02a0 90E0      		ldi r25,hi8(0)
 800               	.L22:
 801               	/* epilogue: frame size=0 */
 802 02a2 DF91      		pop r29
 803 02a4 CF91      		pop r28
 804 02a6 1F91      		pop r17
 805 02a8 0F91      		pop r16
 806 02aa FF90      		pop r15
 807 02ac EF90      		pop r14
 808 02ae DF90      		pop r13
 809 02b0 CF90      		pop r12
 810 02b2 BF90      		pop r11
 811 02b4 AF90      		pop r10
 812 02b6 0895      		ret
 813               	/* epilogue end (size=11) */
 814               	/* function ker_sys_post_value size 71 (50) */
 820               	.Lscope6:
 822               		.text
 824               	Letext:
 825               	/* File "/Users/Administrator/sos-2x/kernel/message.c": code  349 = 0x015d ( 236), prologues  53, e
DEFINED SYMBOLS
                            *ABS*:00000000 message.c
                            *ABS*:0000003f __SREG__
                            *ABS*:0000003e __SP_H__
                            *ABS*:0000003d __SP_L__
                            *ABS*:00000000 __tmp_reg__
                            *ABS*:00000001 __zero_reg__
/var/tmp//ccvBhFh0.s:190    .text:00000000 post_short
/var/tmp//ccvBhFh0.s:297    .text:00000076 post_longer
/var/tmp//ccvBhFh0.s:416    .text:000000ee post_long
/var/tmp//ccvBhFh0.s:464    .text:00000126 ker_sys_post
/var/tmp//ccvBhFh0.s:537    .text:00000184 ker_msg_take_data
/var/tmp//ccvBhFh0.s:659    .text:000001f8 ker_sys_msg_take_data
/var/tmp//ccvBhFh0.s:714    .text:0000022a ker_sys_post_value
/var/tmp//ccvBhFh0.s:824    .text:000002b8 Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
msg_create
node_address
sched_msg_alloc
sos_blk_mem_free
ker_get_current_pid
ker_mod_panic
sos_blk_mem_change_own
sos_blk_mem_alloc
memcpy
