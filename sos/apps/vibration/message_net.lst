   1               		.file	"message_net.c"
   2               		.arch atmega128
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  12               		.text
  13               	.Ltext0:
 296               		.section	.progmem.data,"a",@progbits
 299               	mod_header:
 300 0000 0000      		.word	0
 301 0002 14        		.byte	20
 302 0003 00        		.skip 1,0
 303 0004 01        		.byte	1
 304 0005 00        		.byte	0
 305 0006 0000 0000 		.skip 8,0
 305      0000 0000 
 306 000e 0000      		.word	pm(routing_handler)
 307 0010 0000      		.word	pm(no_router)
 308 0012 637A 7631 		.ascii	"czv1"
 309 0016 FF        		.byte	-1
 310 0017 FF        		.byte	-1
 311               		.text
 316               	no_router:
   1:/Users/Administrator/sos-2x/kernel/message_net.c **** /* -*- Mode: C; tab-width:2 -*- */
   2:/Users/Administrator/sos-2x/kernel/message_net.c **** /* ex: set ts=2 shiftwidth=2 softtabstop=2 cindent: */
   3:/Users/Administrator/sos-2x/kernel/message_net.c **** /*
   4:/Users/Administrator/sos-2x/kernel/message_net.c ****  * Copyright (c) 2003 The Regents of the University of California.
   5:/Users/Administrator/sos-2x/kernel/message_net.c ****  * All rights reserved.
   6:/Users/Administrator/sos-2x/kernel/message_net.c ****  *
   7:/Users/Administrator/sos-2x/kernel/message_net.c ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Administrator/sos-2x/kernel/message_net.c ****  * modification, are permitted provided that the following conditions
   9:/Users/Administrator/sos-2x/kernel/message_net.c ****  * are met:
  10:/Users/Administrator/sos-2x/kernel/message_net.c ****  * 1. Redistributions of source code must retain the above copyright
  11:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    notice, this list of conditions and the following disclaimer.
  12:/Users/Administrator/sos-2x/kernel/message_net.c ****  * 2. Redistributions in binary form must reproduce the above
  13:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    copyright notice, this list of conditions and the following
  14:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    disclaimer in the documentation and/or other materials provided
  15:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    with the distribution.
  16:/Users/Administrator/sos-2x/kernel/message_net.c ****  * 3. All advertising materials mentioning features or use of this
  17:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    software must display the following acknowledgement:
  18:/Users/Administrator/sos-2x/kernel/message_net.c ****  *       This product includes software developed by Networked &
  19:/Users/Administrator/sos-2x/kernel/message_net.c ****  *       Embedded Systems Lab at UCLA
  20:/Users/Administrator/sos-2x/kernel/message_net.c ****  * 4. Neither the name of the University nor that of the Laboratory
  21:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    may be used to endorse or promote products derived from this
  22:/Users/Administrator/sos-2x/kernel/message_net.c ****  *    software without specific prior written permission.
  23:/Users/Administrator/sos-2x/kernel/message_net.c ****  *
  24:/Users/Administrator/sos-2x/kernel/message_net.c ****  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
  25:/Users/Administrator/sos-2x/kernel/message_net.c ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  26:/Users/Administrator/sos-2x/kernel/message_net.c ****  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  27:/Users/Administrator/sos-2x/kernel/message_net.c ****  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS
  28:/Users/Administrator/sos-2x/kernel/message_net.c ****  * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:/Users/Administrator/sos-2x/kernel/message_net.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:/Users/Administrator/sos-2x/kernel/message_net.c ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
  31:/Users/Administrator/sos-2x/kernel/message_net.c ****  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  32:/Users/Administrator/sos-2x/kernel/message_net.c ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:/Users/Administrator/sos-2x/kernel/message_net.c ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  34:/Users/Administrator/sos-2x/kernel/message_net.c ****  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  35:/Users/Administrator/sos-2x/kernel/message_net.c ****  * SUCH DAMAGE.
  36:/Users/Administrator/sos-2x/kernel/message_net.c ****  *
  37:/Users/Administrator/sos-2x/kernel/message_net.c ****  * $Id: message_net.c,v 1.36 2006/12/17 00:51:01 simonhan Exp $ 
  38:/Users/Administrator/sos-2x/kernel/message_net.c ****  */
  39:/Users/Administrator/sos-2x/kernel/message_net.c **** /**
  40:/Users/Administrator/sos-2x/kernel/message_net.c ****  * @brief Message handling routines for network
  41:/Users/Administrator/sos-2x/kernel/message_net.c ****  * @author Simon Han (simonhan@cs.ucla.edu)
  42:/Users/Administrator/sos-2x/kernel/message_net.c ****  * @brief General Message Dispatcher (Handles diverse links)
  43:/Users/Administrator/sos-2x/kernel/message_net.c ****  * @author Ram Kumar {ram@ee.ucla.edu}
  44:/Users/Administrator/sos-2x/kernel/message_net.c ****  */
  45:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  46:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <message_queue.h>
  47:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <monitor.h>
  48:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_info.h>
  49:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <message_types.h>
  50:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <malloc.h>
  51:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <message.h>
  52:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_sched.h>
  53:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <hardware.h>
  54:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_logging.h>
  55:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_USE_PREEMPTION
  56:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <priority.h>
  57:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
  58:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  59:/Users/Administrator/sos-2x/kernel/message_net.c **** #if defined (SOS_UART_CHANNEL)
  60:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_uart.h>
  61:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_uart_mgr.h>
  62:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
  63:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  64:/Users/Administrator/sos-2x/kernel/message_net.c **** #if defined (SOS_I2C_CHANNEL)
  65:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_i2c.h>
  66:/Users/Administrator/sos-2x/kernel/message_net.c **** #include <sos_i2c_mgr.h>
  67:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
  68:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  69:/Users/Administrator/sos-2x/kernel/message_net.c **** typedef int8_t (*routing_func_t)(func_cb_ptr cb, Message *m);
  70:/Users/Administrator/sos-2x/kernel/message_net.c **** static int8_t no_router(func_cb_ptr p, Message *msg);
  71:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
  72:/Users/Administrator/sos-2x/kernel/message_net.c **** // STATIC FUNCTION DECLARATIONS
  73:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
  74:/Users/Administrator/sos-2x/kernel/message_net.c **** static int8_t sos_msg_dispatch(Message* m);
  75:/Users/Administrator/sos-2x/kernel/message_net.c **** static inline void msg_change_endian(Message* e);
  76:/Users/Administrator/sos-2x/kernel/message_net.c **** static bool sos_msg_find_right_link(Message *m);
  77:/Users/Administrator/sos-2x/kernel/message_net.c **** static int8_t routing_handler(void *state, Message *msg);
  78:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  79:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifndef SOS_USE_PREEMPTION
  80:/Users/Administrator/sos-2x/kernel/message_net.c **** static sos_module_t routing_module;
  81:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
  82:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  83:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_USE_PREEMPTION
  84:/Users/Administrator/sos-2x/kernel/message_net.c **** static func_cb_ptr *routing_func_ptr;
  85:/Users/Administrator/sos-2x/kernel/message_net.c **** #else
  86:/Users/Administrator/sos-2x/kernel/message_net.c **** static func_cb_ptr routing_func_ptr[1];
  87:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
  88:/Users/Administrator/sos-2x/kernel/message_net.c **** 
  89:/Users/Administrator/sos-2x/kernel/message_net.c **** static mod_header_t mod_header SOS_MODULE_HEADER =
  90:/Users/Administrator/sos-2x/kernel/message_net.c **** {
  91:/Users/Administrator/sos-2x/kernel/message_net.c ****   mod_id : KER_ROUTING_PID,
  92:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_USE_PREEMPTION
  93:/Users/Administrator/sos-2x/kernel/message_net.c **** 	state_size : sizeof(func_cb_ptr),
  94:/Users/Administrator/sos-2x/kernel/message_net.c **** #else
  95:/Users/Administrator/sos-2x/kernel/message_net.c ****   state_size : 0,
  96:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
  97:/Users/Administrator/sos-2x/kernel/message_net.c ****   num_prov_func : 0,
  98:/Users/Administrator/sos-2x/kernel/message_net.c ****   num_sub_func : 1,
  99:/Users/Administrator/sos-2x/kernel/message_net.c ****   module_handler: routing_handler,
 100:/Users/Administrator/sos-2x/kernel/message_net.c ****   funct : {
 101:/Users/Administrator/sos-2x/kernel/message_net.c ****     // routing function
 102:/Users/Administrator/sos-2x/kernel/message_net.c ****     {no_router, "czv1", RUNTIME_PID, RUNTIME_FID},
 103:/Users/Administrator/sos-2x/kernel/message_net.c ****   },
 104:/Users/Administrator/sos-2x/kernel/message_net.c **** };
 105:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 106:/Users/Administrator/sos-2x/kernel/message_net.c **** static int8_t no_router(func_cb_ptr p, Message *msg)
 107:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 318               	.LM1:
 319               	/* prologue: frame size=0 */
 320               	/* prologue end (size=0) */
 108:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return -1;
 109:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 322               	.LM2:
 323 0000 8FEF      		ldi r24,lo8(-1)
 324 0002 9FEF      		ldi r25,hi8(-1)
 325               	/* epilogue: frame size=0 */
 326 0004 0895      		ret
 327               	/* epilogue end (size=1) */
 328               	/* function no_router size 3 (2) */
 330               	.Lscope0:
 336               	routing_handler:
 110:/Users/Administrator/sos-2x/kernel/message_net.c **** static int8_t routing_handler(void *state, Message *msg)
 111:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 338               	.LM3:
 339               	/* prologue: frame size=0 */
 340               	/* prologue end (size=0) */
 112:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return -EINVAL;
 113:/Users/Administrator/sos-2x/kernel/message_net.c **** } 
 342               	.LM4:
 343 0006 8AEE      		ldi r24,lo8(-22)
 344 0008 9FEF      		ldi r25,hi8(-22)
 345               	/* epilogue: frame size=0 */
 346 000a 0895      		ret
 347               	/* epilogue end (size=1) */
 348               	/* function routing_handler size 3 (2) */
 350               	.Lscope1:
 355               	sos_msg_find_right_link:
 114:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 115:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
 116:/Users/Administrator/sos-2x/kernel/message_net.c **** // FUNCTION IMPLEMENTATIONS
 117:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
 118:/Users/Administrator/sos-2x/kernel/message_net.c **** // Fix the endian-ness of the message header
 119:/Users/Administrator/sos-2x/kernel/message_net.c **** static inline void msg_change_endian(Message* e){
 120:/Users/Administrator/sos-2x/kernel/message_net.c ****   e->daddr = ehtons(e->daddr);
 121:/Users/Administrator/sos-2x/kernel/message_net.c ****   e->saddr = ehtons(e->saddr);
 122:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 123:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 124:/Users/Administrator/sos-2x/kernel/message_net.c **** // Create a deep copy of the message
 125:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 126:/Users/Administrator/sos-2x/kernel/message_net.c **** #if defined(SOS_UART_CHANNEL) || defined(SOS_I2C_CHANNEL) || defined(SOS_SPI_CHANNEL)
 127:/Users/Administrator/sos-2x/kernel/message_net.c **** static Message* msg_duplicate(Message* m){
 128:/Users/Administrator/sos-2x/kernel/message_net.c ****   Message* mcopy;
 129:/Users/Administrator/sos-2x/kernel/message_net.c **** 	uint8_t* d;
 130:/Users/Administrator/sos-2x/kernel/message_net.c ****   mcopy = msg_create();
 131:/Users/Administrator/sos-2x/kernel/message_net.c ****   if (NULL == mcopy) return NULL;
 132:/Users/Administrator/sos-2x/kernel/message_net.c ****   d = (uint8_t*)ker_malloc(m->len, KER_SCHED_PID);
 133:/Users/Administrator/sos-2x/kernel/message_net.c ****   if ((NULL == d) && (0 != m->len)){
 134:/Users/Administrator/sos-2x/kernel/message_net.c ****     msg_dispose(mcopy);
 135:/Users/Administrator/sos-2x/kernel/message_net.c ****     return NULL;
 136:/Users/Administrator/sos-2x/kernel/message_net.c ****   }
 137:/Users/Administrator/sos-2x/kernel/message_net.c **** 	memcpy(mcopy, m, sizeof(Message));
 138:/Users/Administrator/sos-2x/kernel/message_net.c **** 	mcopy->data = d;
 139:/Users/Administrator/sos-2x/kernel/message_net.c **** 	mcopy->flag |= SOS_MSG_RELEASE;
 140:/Users/Administrator/sos-2x/kernel/message_net.c ****   memcpy(mcopy->data, m->data, m->len);
 141:/Users/Administrator/sos-2x/kernel/message_net.c ****   return mcopy;
 142:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 143:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 144:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 145:/Users/Administrator/sos-2x/kernel/message_net.c **** // NULL Link - Simply free the message
 146:/Users/Administrator/sos-2x/kernel/message_net.c **** static void null_link_msg_alloc(Message* m){
 147:/Users/Administrator/sos-2x/kernel/message_net.c ****   msg_dispose(m);
 148:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 149:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 150:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 151:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 152:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
 153:/Users/Administrator/sos-2x/kernel/message_net.c **** // POST
 154:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
 155:/Users/Administrator/sos-2x/kernel/message_net.c **** // Copies message header and sends out the message
 156:/Users/Administrator/sos-2x/kernel/message_net.c **** int8_t post(Message *e){
 157:/Users/Administrator/sos-2x/kernel/message_net.c ****   Message *m = msg_create();
 158:/Users/Administrator/sos-2x/kernel/message_net.c ****   if(m == NULL){ 
 159:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if(flag_msg_release(e->flag)) {
 160:/Users/Administrator/sos-2x/kernel/message_net.c **** 	  ker_free(e->data);
 161:/Users/Administrator/sos-2x/kernel/message_net.c **** 		e->data = NULL;
 162:/Users/Administrator/sos-2x/kernel/message_net.c **** 		e->len = 0;
 163:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 164:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return -ENOMEM;
 165:/Users/Administrator/sos-2x/kernel/message_net.c ****   }
 166:/Users/Administrator/sos-2x/kernel/message_net.c ****   // deep copy the header
 167:/Users/Administrator/sos-2x/kernel/message_net.c ****   *m = *e;
 168:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 169:/Users/Administrator/sos-2x/kernel/message_net.c **** 	// Transfer the memory
 170:/Users/Administrator/sos-2x/kernel/message_net.c **** 	e->len = 0;
 171:/Users/Administrator/sos-2x/kernel/message_net.c **** 	e->data = NULL;
 172:/Users/Administrator/sos-2x/kernel/message_net.c **** 	e->flag &= ~SOS_MSG_RELEASE;
 173:/Users/Administrator/sos-2x/kernel/message_net.c **** 		
 174:/Users/Administrator/sos-2x/kernel/message_net.c ****   
 175:/Users/Administrator/sos-2x/kernel/message_net.c ****   // Dispatch Message
 176:/Users/Administrator/sos-2x/kernel/message_net.c ****   return sos_msg_dispatch(m);
 177:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 178:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 179:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
 180:/Users/Administrator/sos-2x/kernel/message_net.c **** // POST LINK
 181:/Users/Administrator/sos-2x/kernel/message_net.c **** //-------------------------------------------------------------------------------
 182:/Users/Administrator/sos-2x/kernel/message_net.c **** // Post a message over any link as specified by the flag
 183:/Users/Administrator/sos-2x/kernel/message_net.c **** int8_t post_link(sos_pid_t did, sos_pid_t sid, 
 184:/Users/Administrator/sos-2x/kernel/message_net.c **** 		uint8_t type, uint8_t len, 
 185:/Users/Administrator/sos-2x/kernel/message_net.c **** 		void *data, uint16_t flag, 
 186:/Users/Administrator/sos-2x/kernel/message_net.c **** 		uint16_t daddr)
 187:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 188:/Users/Administrator/sos-2x/kernel/message_net.c ****   // Create a message
 189:/Users/Administrator/sos-2x/kernel/message_net.c ****   Message *m = msg_create();
 190:/Users/Administrator/sos-2x/kernel/message_net.c ****   if (NULL == m){
 191:/Users/Administrator/sos-2x/kernel/message_net.c ****     if (flag_msg_release(flag)){
 192:/Users/Administrator/sos-2x/kernel/message_net.c ****       ker_free(data);
 193:/Users/Administrator/sos-2x/kernel/message_net.c ****     }
 194:/Users/Administrator/sos-2x/kernel/message_net.c ****     return -ENOMEM;
 195:/Users/Administrator/sos-2x/kernel/message_net.c ****   }
 196:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 197:/Users/Administrator/sos-2x/kernel/message_net.c ****   // Fill out message header
 198:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->daddr = daddr;
 199:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->did = did;
 200:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->type = type;
 201:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->saddr = node_address;
 202:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->sid = sid;
 203:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->len = len;
 204:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->data = (uint8_t*)data;
 205:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->flag = flag;
 206:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_USE_PREEMPTION
 207:/Users/Administrator/sos-2x/kernel/message_net.c ****   // assign priority based on did
 208:/Users/Administrator/sos-2x/kernel/message_net.c ****   m->priority = get_module_priority(did);
 209:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 210:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 211:/Users/Administrator/sos-2x/kernel/message_net.c ****   // Dispatch Message
 212:/Users/Administrator/sos-2x/kernel/message_net.c ****   return sos_msg_dispatch(m);
 213:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 214:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 215:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 216:/Users/Administrator/sos-2x/kernel/message_net.c **** //-----------------------------------------------------------------------------
 217:/Users/Administrator/sos-2x/kernel/message_net.c **** // SOS Find Right link
 218:/Users/Administrator/sos-2x/kernel/message_net.c **** //-----------------------------------------------------------------------------
 219:/Users/Administrator/sos-2x/kernel/message_net.c **** static bool sos_msg_find_right_link(Message *m)
 220:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 357               	.LM5:
 358               	/* prologue: frame size=0 */
 359 000c 1F93      		push r17
 360 000e CF93      		push r28
 361 0010 DF93      		push r29
 362               	/* prologue end (size=3) */
 363 0012 EC01      		movw r28,r24
 221:/Users/Administrator/sos-2x/kernel/message_net.c **** 		bool link_found = false;
 365               	.LM6:
 366 0014 10E0      		ldi r17,lo8(0)
 222:/Users/Administrator/sos-2x/kernel/message_net.c **** 		
 223:/Users/Administrator/sos-2x/kernel/message_net.c **** 		// try to figure out the right link
 224:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_UART_CHANNEL
 225:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if (check_uart_address(m->daddr) == SOS_OK) {
 368               	.LM7:
 369 0016 8A81      		ldd r24,Y+2
 370 0018 9B81      		ldd r25,Y+3
 371 001a 0E94 0000 		call check_uart_address
 372 001e 2A85      		ldd r18,Y+10
 373 0020 3B85      		ldd r19,Y+11
 374 0022 8823      		tst r24
 375 0024 29F4      		brne .L4
 226:/Users/Administrator/sos-2x/kernel/message_net.c **** 			m->flag |= SOS_MSG_UART_IO;	
 377               	.LM8:
 378 0026 3860      		ori r19,hi8(2048)
 379 0028 2A87      		std Y+10,r18
 380 002a 3B87      		std Y+11,r19
 227:/Users/Administrator/sos-2x/kernel/message_net.c **** 			link_found = true;
 382               	.LM9:
 383 002c 11E0      		ldi r17,lo8(1)
 384 002e 03C0      		rjmp .L5
 385               	.L4:
 228:/Users/Administrator/sos-2x/kernel/message_net.c **** 		} else {
 229:/Users/Administrator/sos-2x/kernel/message_net.c **** 			m->flag &= ~SOS_MSG_UART_IO;	
 387               	.LM10:
 388 0030 377F      		andi r19,hi8(-2049)
 389 0032 2A87      		std Y+10,r18
 390 0034 3B87      		std Y+11,r19
 391               	.L5:
 230:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 231:/Users/Administrator/sos-2x/kernel/message_net.c **** #else
 232:/Users/Administrator/sos-2x/kernel/message_net.c **** 		m->flag &= ~SOS_MSG_UART_IO;	
 233:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 234:/Users/Administrator/sos-2x/kernel/message_net.c **** 		
 235:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_I2C_CHANNEL
 236:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if (check_i2c_address(m->daddr) == SOS_OK) {
 237:/Users/Administrator/sos-2x/kernel/message_net.c **** 			m->flag |= SOS_MSG_I2C_IO;	
 238:/Users/Administrator/sos-2x/kernel/message_net.c **** 			link_found = true;
 239:/Users/Administrator/sos-2x/kernel/message_net.c **** 		} else {
 240:/Users/Administrator/sos-2x/kernel/message_net.c **** 			m->flag &= ~SOS_MSG_I2C_IO;	
 241:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 242:/Users/Administrator/sos-2x/kernel/message_net.c **** #else
 243:/Users/Administrator/sos-2x/kernel/message_net.c **** 		m->flag &= ~SOS_MSG_I2C_IO;	
 393               	.LM11:
 394 0036 2A85      		ldd r18,Y+10
 395 0038 3B85      		ldd r19,Y+11
 396 003a C901      		movw r24,r18
 397 003c 9B7F      		andi r25,hi8(-1025)
 398 003e 8A87      		std Y+10,r24
 399 0040 9B87      		std Y+11,r25
 244:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 245:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 246:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if(link_found == false) {
 401               	.LM12:
 402 0042 1123      		tst r17
 403 0044 21F4      		brne .L6
 247:/Users/Administrator/sos-2x/kernel/message_net.c **** 			m->flag |= SOS_MSG_RADIO_IO;	
 405               	.LM13:
 406 0046 9260      		ori r25,hi8(512)
 407 0048 8A87      		std Y+10,r24
 408 004a 9B87      		std Y+11,r25
 409 004c 03C0      		rjmp .L7
 410               	.L6:
 248:/Users/Administrator/sos-2x/kernel/message_net.c **** 		} else {
 249:/Users/Administrator/sos-2x/kernel/message_net.c **** 			m->flag &= ~SOS_MSG_RADIO_IO;	
 412               	.LM14:
 413 004e 397F      		andi r19,hi8(-1537)
 414 0050 2A87      		std Y+10,r18
 415 0052 3B87      		std Y+11,r19
 416               	.L7:
 250:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 251:/Users/Administrator/sos-2x/kernel/message_net.c **** 		return link_found;
 252:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 418               	.LM15:
 419 0054 812F      		mov r24,r17
 420 0056 9927      		clr r25
 421               	/* epilogue: frame size=0 */
 422 0058 DF91      		pop r29
 423 005a CF91      		pop r28
 424 005c 1F91      		pop r17
 425 005e 0895      		ret
 426               	/* epilogue end (size=4) */
 427               	/* function sos_msg_find_right_link size 45 (38) */
 432               	.Lscope2:
 437               	sos_msg_dispatch:
 253:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 254:/Users/Administrator/sos-2x/kernel/message_net.c **** //--------------------------------------------------------------------------------
 255:/Users/Administrator/sos-2x/kernel/message_net.c **** // SOS Message Dispatcher
 256:/Users/Administrator/sos-2x/kernel/message_net.c **** //--------------------------------------------------------------------------------
 257:/Users/Administrator/sos-2x/kernel/message_net.c **** static int8_t sos_msg_dispatch(Message* m)
 258:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 439               	.LM16:
 440               	/* prologue: frame size=8 */
 441 0060 AF92      		push r10
 442 0062 BF92      		push r11
 443 0064 CF92      		push r12
 444 0066 DF92      		push r13
 445 0068 EF92      		push r14
 446 006a FF92      		push r15
 447 006c 0F93      		push r16
 448 006e 1F93      		push r17
 449 0070 CF93      		push r28
 450 0072 DF93      		push r29
 451 0074 CDB7      		in r28,__SP_L__
 452 0076 DEB7      		in r29,__SP_H__
 453 0078 2897      		sbiw r28,8
 454 007a 0FB6      		in __tmp_reg__,__SREG__
 455 007c F894      		cli
 456 007e DEBF      		out __SP_H__,r29
 457 0080 0FBE      		out __SREG__,__tmp_reg__
 458 0082 CDBF      		out __SP_L__,r28
 459               	/* prologue end (size=18) */
 460 0084 7C01      		movw r14,r24
 259:/Users/Administrator/sos-2x/kernel/message_net.c **** #if defined(SOS_RADIO_CHANNEL) || defined(SOS_UART_CHANNEL) || defined(SOS_I2C_CHANNEL) || defined(
 260:/Users/Administrator/sos-2x/kernel/message_net.c **** 	Message* mcopy[NUM_IO_LINKS] = {NULL};
 462               	.LM17:
 463 0086 5E01      		movw r10,r28
 464 0088 0894      		sec
 465 008a A11C      		adc r10,__zero_reg__
 466 008c B11C      		adc r11,__zero_reg__
 467 008e 88E0      		ldi r24,lo8(8)
 468 0090 D501      		movw r26,r10
 469 0092 1D92      		st X+,__zero_reg__
 470 0094 8A95      	        dec r24
 471 0096 E9F7      		brne .-6
 261:/Users/Administrator/sos-2x/kernel/message_net.c **** 	uint8_t msg_count = 0;
 473               	.LM18:
 474 0098 DD24      		clr r13
 262:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 263:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 264:/Users/Administrator/sos-2x/kernel/message_net.c ****   // Local Dispatch
 265:/Users/Administrator/sos-2x/kernel/message_net.c ****   if (node_address == m->daddr){
 476               	.LM19:
 477 009a 8091 0000 		lds r24,node_address
 478 009e 9091 0000 		lds r25,(node_address)+1
 479 00a2 F701      		movw r30,r14
 480 00a4 2281      		ldd r18,Z+2
 481 00a6 3381      		ldd r19,Z+3
 482 00a8 8217      		cp r24,r18
 483 00aa 9307      		cpc r25,r19
 484 00ac 21F4      		brne .L9
 266:/Users/Administrator/sos-2x/kernel/message_net.c ****     sched_msg_alloc(m);
 486               	.LM20:
 487 00ae C701      		movw r24,r14
 488 00b0 0E94 0000 		call sched_msg_alloc
 489 00b4 A8C0      		rjmp .L30
 490               	.L9:
 267:/Users/Administrator/sos-2x/kernel/message_net.c **** 		ker_log( SOS_LOG_POST_NET, m->sid, m->daddr );
 268:/Users/Administrator/sos-2x/kernel/message_net.c ****     return SOS_OK;
 269:/Users/Administrator/sos-2x/kernel/message_net.c ****   }
 270:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 271:/Users/Administrator/sos-2x/kernel/message_net.c **** #if !defined(SOS_UART_CHANNEL) && !defined(SOS_I2C_CHANNEL) && !defined(SOS_RADIO_CHANNEL) && !defi
 272:/Users/Administrator/sos-2x/kernel/message_net.c **** 	null_link_msg_alloc(m);
 273:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return -EINVAL;
 274:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 275:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 276:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if( m->daddr != BCAST_ADDRESS && flag_msg_raw(m->flag) == 0 ) {
 492               	.LM21:
 493 00b6 2F5F      		subi r18,lo8(-1)
 494 00b8 3F4F      		sbci r19,hi8(-1)
 495 00ba 21F1      		breq .L10
 496 00bc F701      		movw r30,r14
 497 00be 8285      		ldd r24,Z+10
 498 00c0 9385      		ldd r25,Z+11
 499 00c2 84E0      		ldi r24,0x04
 500 00c4 989F      		mul r25,r24
 501 00c6 812D      		mov r24,r1
 502 00c8 9927      		clr r25
 503 00ca 1124      		clr __zero_reg__
 504 00cc 80FD      		sbrc r24,0
 505 00ce 1AC0      		rjmp .L10
 506               	.LBB2:
 277:/Users/Administrator/sos-2x/kernel/message_net.c **** 		int8_t ret;
 278:/Users/Administrator/sos-2x/kernel/message_net.c **** 		// Not using raw message, send to the routing layer first
 279:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if( sos_msg_find_right_link(m) == false ) {
 508               	.LM22:
 509 00d0 C701      		movw r24,r14
 510 00d2 0E94 0000 		call sos_msg_find_right_link
 511 00d6 8823      		tst r24
 512 00d8 A9F4      		brne .L10
 280:/Users/Administrator/sos-2x/kernel/message_net.c **** 			ret = SOS_CALL(routing_func_ptr[0], routing_func_t, m);
 514               	.LM23:
 515 00da B701      		movw r22,r14
 516 00dc 8091 0000 		lds r24,routing_func_ptr
 517 00e0 9091 0000 		lds r25,(routing_func_ptr)+1
 518 00e4 0E94 4600 		call 140
 281:/Users/Administrator/sos-2x/kernel/message_net.c **** 			if( ret == ( SOS_OK + 1 )) {
 520               	.LM24:
 521 00e8 8130      		cpi r24,lo8(1)
 522 00ea 21F4      		brne .L12
 282:/Users/Administrator/sos-2x/kernel/message_net.c **** 				// Forward to the link layer (don't generate senddone)
 283:/Users/Administrator/sos-2x/kernel/message_net.c **** 				msg_dispose(m);
 524               	.LM25:
 525 00ec C701      		movw r24,r14
 526 00ee 0E94 0000 		call msg_dispose
 527 00f2 89C0      		rjmp .L30
 528               	.L12:
 284:/Users/Administrator/sos-2x/kernel/message_net.c **** 				return SOS_OK;
 285:/Users/Administrator/sos-2x/kernel/message_net.c **** 			} else if( ret == SOS_OK ) {
 530               	.LM26:
 531 00f4 8823      		tst r24
 532 00f6 31F4      		brne .L10
 286:/Users/Administrator/sos-2x/kernel/message_net.c **** 				// generate senddone
 287:/Users/Administrator/sos-2x/kernel/message_net.c **** 				msg_send_senddone( m, true, KER_ROUTING_PID );
 534               	.LM27:
 535 00f8 44E1      		ldi r20,lo8(20)
 536 00fa 61E0      		ldi r22,lo8(1)
 537 00fc C701      		movw r24,r14
 538 00fe 0E94 0000 		call msg_send_senddone
 539 0102 81C0      		rjmp .L30
 540               	.L10:
 541               	.LBE2:
 288:/Users/Administrator/sos-2x/kernel/message_net.c **** 				return SOS_OK;
 289:/Users/Administrator/sos-2x/kernel/message_net.c **** 			}
 290:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 291:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 292:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 293:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (flag_msg_link_auto(m->flag) && m->daddr != BCAST_ADDRESS) {
 543               	.LM28:
 544 0104 F701      		movw r30,r14
 545 0106 8285      		ldd r24,Z+10
 546 0108 9385      		ldd r25,Z+11
 547 010a 892F      		mov r24,r25
 548 010c 9927      		clr r25
 549 010e 8295      		swap r24
 550 0110 8695      		lsr r24
 551 0112 8770      		andi r24,0x07
 552 0114 80FF      		sbrs r24,0
 553 0116 08C0      		rjmp .L15
 554 0118 8281      		ldd r24,Z+2
 555 011a 9381      		ldd r25,Z+3
 556 011c 8F5F      		subi r24,lo8(-1)
 557 011e 9F4F      		sbci r25,hi8(-1)
 558 0120 19F0      		breq .L15
 294:/Users/Administrator/sos-2x/kernel/message_net.c **** 		sos_msg_find_right_link(m);
 560               	.LM29:
 561 0122 C701      		movw r24,r14
 562 0124 0E94 0000 		call sos_msg_find_right_link
 563               	.L15:
 295:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 296:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 297:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if ((m->flag & SOS_MSG_ALL_LINK_IO) == 0) {
 565               	.LM30:
 566 0128 F701      		movw r30,r14
 567 012a 2285      		ldd r18,Z+10
 568 012c 3385      		ldd r19,Z+11
 569 012e 8901      		movw r16,r18
 570 0130 0070      		andi r16,lo8(7680)
 571 0132 1E71      		andi r17,hi8(7680)
 572 0134 0115      		cp r16,__zero_reg__
 573 0136 1105      		cpc r17,__zero_reg__
 574 0138 29F4      		brne .L16
 575               	.LBB3:
 576               	.LBB4:
 578               	.LM31:
 579 013a C701      		movw r24,r14
 580 013c 0E94 0000 		call msg_dispose
 581               	.LBE4:
 582               	.LBE3:
 298:/Users/Administrator/sos-2x/kernel/message_net.c **** 		null_link_msg_alloc(m);
 299:/Users/Administrator/sos-2x/kernel/message_net.c **** 		return SOS_OK;
 584               	.LM32:
 585 0140 C801      		movw r24,r16
 586 0142 74C0      		rjmp .L8
 587               	.L16:
 300:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 301:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 302:/Users/Administrator/sos-2x/kernel/message_net.c **** 	// Pre-allocate the message copies to allow for
 303:/Users/Administrator/sos-2x/kernel/message_net.c **** 	// an atomic NOMEM failure
 304:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_RADIO_CHANNEL
 305:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (flag_msg_from_radio(m->flag)){
 589               	.LM33:
 590 0144 C901      		movw r24,r18
 591 0146 892F      		mov r24,r25
 592 0148 9927      		clr r25
 593 014a 8695      		lsr r24
 594 014c 80FF      		sbrs r24,0
 595 014e 04C0      		rjmp .L18
 306:/Users/Administrator/sos-2x/kernel/message_net.c **** 		mcopy[SOS_RADIO_LINK_ID] = m;
 597               	.LM34:
 598 0150 E982      		std Y+1,r14
 599 0152 FA82      		std Y+2,r15
 307:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_count ++;
 601               	.LM35:
 602 0154 41E0      		ldi r20,lo8(1)
 603 0156 D42E      		mov r13,r20
 604               	.L18:
 308:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 309:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 310:/Users/Administrator/sos-2x/kernel/message_net.c **** 	
 311:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_UART_CHANNEL
 312:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if( flag_msg_from_uart(m->flag) ) {
 606               	.LM36:
 607 0158 C901      		movw r24,r18
 608 015a 892F      		mov r24,r25
 609 015c 9927      		clr r25
 610 015e 8695      		lsr r24
 611 0160 8695      		lsr r24
 612 0162 8695      		lsr r24
 613 0164 80FF      		sbrs r24,0
 614 0166 40C0      		rjmp .L19
 313:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if (msg_count == 0){
 616               	.LM37:
 617 0168 DD20      		tst r13
 618 016a 19F4      		brne .L20
 314:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_UART_LINK_ID] = m;
 620               	.LM38:
 621 016c ED82      		std Y+5,r14
 622 016e FE82      		std Y+6,r15
 623 0170 3BC0      		rjmp .L19
 624               	.L20:
 625               	.LBB5:
 626               	.LBB6:
 628               	.LM39:
 629 0172 0E94 0000 		call msg_create
 630 0176 8C01      		movw r16,r24
 632               	.LM40:
 633 0178 892B      		or r24,r25
 634 017a 61F1      		breq .L39
 635               	.LBB7:
 637               	.Ltext1:
   1:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /* -*- Mode: C; tab-width:4 -*- */
   2:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /* ex: set ts=4: */
   3:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /*
   4:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Copyright (c) 2003 The Regents of the University of California.
   5:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * All rights reserved.
   6:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *
   7:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Redistribution and use in source and binary forms, with or without
   8:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * modification, are permitted provided that the following conditions
   9:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * are met:
  10:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 1. Redistributions of source code must retain the above copyright
  11:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    notice, this list of conditions and the following disclaimer.
  12:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 2. Redistributions in binary form must reproduce the above
  13:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    copyright notice, this list of conditions and the following
  14:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    disclaimer in the documentation and/or other materials provided
  15:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    with the distribution.
  16:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 3. All advertising materials mentioning features or use of this
  17:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    software must display the following acknowledgement:
  18:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *       This product includes software developed by Networked &
  19:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *       Embedded Systems Lab at UCLA
  20:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * 4. Neither the name of the University nor that of the Laboratory
  21:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    may be used to endorse or promote products derived from this
  22:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *    software without specific prior written permission.
  23:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *
  24:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS''
  25:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
  26:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
  27:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS
  28:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  29:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
  30:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
  31:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
  32:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  33:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
  34:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
  35:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * SUCH DAMAGE.
  36:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  *
  37:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief    Allocte and free dynamic memory 
  38:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @author   Roy Shea (roy@cs.ucla.edu) 
  39:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  40:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #ifndef _MALLOC_H_
  41:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #define _MALLOC_H_
  42:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  43:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <sos_types.h>
  44:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <pid.h>
  45:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <malloc_conf.h>
  46:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <sos_module_types.h>
  47:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #ifdef FAULT_TOLERANT_SOS
  48:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #include <malloc_domains.h>
  49:/Users/Administrator/sos-2x/kernel/include/malloc.h **** #endif
  50:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  51:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  52:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Init function for memory manager
  53:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  54:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void mem_init(void);
  55:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  56:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  57:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Starting memory module interface
  58:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  59:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void mem_start(void);
  60:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  61:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  62:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Allocate a chunk of blocks from the heap
  63:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  64:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void *sos_blk_mem_alloc(uint16_t size, sos_pid_t id, bool bCallFromModule);
  65:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  66:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  67:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Free a block back into the heap
  68:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  69:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void sos_blk_mem_free(void* ptr, bool bCallFromModule);
  70:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  71:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  72:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Re-allocate a block of memory from the heap
  73:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  74:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void *sos_blk_mem_realloc(void* pntr, uint16_t newSize, bool bCallFromModule);
  75:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  76:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  77:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Change memory ownership of a segment of memory
  78:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  79:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern int8_t sos_blk_mem_change_own(void* ptr, sos_pid_t id, bool bCallFromModule);
  80:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  81:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  82:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Allocate a block of memory for long term usage
  83:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  84:/Users/Administrator/sos-2x/kernel/include/malloc.h **** extern void *sos_blk_mem_longterm_alloc(uint16_t size, sos_pid_t id, bool bCallFromModule);
  85:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  86:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  87:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
  88:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Allocate dynamic memory
  89:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param size Number of bytes to allocate
  90:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param id Node responsible for the memory
  91:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return Returns a pointer to the allocated memory.
  92:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Will return a NULL pointer if the call to sys_malloc fails.
  93:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
  94:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline void *ker_malloc(uint16_t size, sos_pid_t id)
  95:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
 639               	.LM41:
 640 017c F701      		movw r30,r14
 641 017e 8781      		ldd r24,Z+7
 642               	.LBB8:
  96:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   return sos_blk_mem_alloc(size, id, false);
 644               	.LM42:
 645 0180 40E0      		ldi r20,lo8(0)
 646 0182 62E0      		ldi r22,lo8(2)
 647 0184 9927      		clr r25
 648 0186 0E94 0000 		call sos_blk_mem_alloc
 649 018a 6C01      		movw r12,r24
 650               	.LBE8:
 651               	.LBE7:
 653               	.Ltext2:
 655               	.LM43:
 656 018c 892B      		or r24,r25
 657 018e 49F4      		brne .L25
 658 0190 F701      		movw r30,r14
 659 0192 8781      		ldd r24,Z+7
 660 0194 8823      		tst r24
 661 0196 29F0      		breq .L25
 663               	.LM44:
 664 0198 C801      		movw r24,r16
 665 019a 0E94 0000 		call msg_dispose
 666 019e F601      		movw r30,r12
 667 01a0 1AC0      		rjmp .L23
 668               	.L25:
 670               	.LM45:
 671 01a2 84E1      		ldi r24,lo8(20)
 672 01a4 D801      		movw r26,r16
 673 01a6 F701      		movw r30,r14
 674 01a8 0190      		ld __tmp_reg__,Z+
 675 01aa 0D92      		st X+,__tmp_reg__
 676 01ac 8A95      		dec r24
 677 01ae E1F7      		brne .-8
 679               	.LM46:
 680 01b0 F801      		movw r30,r16
 681 01b2 C086      		std Z+8,r12
 682 01b4 D186      		std Z+9,r13
 684               	.LM47:
 685 01b6 8285      		ldd r24,Z+10
 686 01b8 9385      		ldd r25,Z+11
 687 01ba 8460      		ori r24,lo8(4)
 688 01bc 8287      		std Z+10,r24
 689 01be 9387      		std Z+11,r25
 691               	.LM48:
 692 01c0 F701      		movw r30,r14
 693 01c2 8781      		ldd r24,Z+7
 694 01c4 9927      		clr r25
 695 01c6 2085      		ldd r18,Z+8
 696 01c8 3185      		ldd r19,Z+9
 697 01ca AC01      		movw r20,r24
 698 01cc B901      		movw r22,r18
 699 01ce C601      		movw r24,r12
 700 01d0 0E94 0000 		call memcpy
 701               	.L39:
 702 01d4 F801      		movw r30,r16
 703               	.L23:
 704               	.LBE6:
 705               	.LBE5:
 707               	.LM49:
 708 01d6 ED83      		std Y+5,r30
 709 01d8 FE83      		std Y+6,r31
 315:/Users/Administrator/sos-2x/kernel/message_net.c **** 		} else {
 316:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_UART_LINK_ID] = msg_duplicate(m);
 317:/Users/Administrator/sos-2x/kernel/message_net.c **** 			if (NULL == mcopy[SOS_UART_LINK_ID]) goto dispatch_cleanup;
 711               	.LM50:
 712 01da 3097      		sbiw r30,0
 713 01dc B9F0      		breq .L27
 318:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_UART_LINK_ID]->flag &= ~SOS_MSG_RELIABLE;
 715               	.LM51:
 716 01de 8285      		ldd r24,Z+10
 717 01e0 9385      		ldd r25,Z+11
 718 01e2 877F      		andi r24,lo8(-9)
 719 01e4 8287      		std Z+10,r24
 720 01e6 9387      		std Z+11,r25
 721               	.L19:
 319:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 320:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_count++;
 321:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 322:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 323:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 324:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_I2C_CHANNEL
 325:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (flag_msg_from_i2c(m->flag)) {
 326:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if (msg_count == 0){
 327:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_I2C_LINK_ID] = m;
 328:/Users/Administrator/sos-2x/kernel/message_net.c **** 		} else {
 329:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_I2C_LINK_ID] = msg_duplicate(m);
 330:/Users/Administrator/sos-2x/kernel/message_net.c **** 			if (NULL == mcopy[SOS_I2C_LINK_ID]) goto dispatch_cleanup;
 331:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_I2C_LINK_ID]->flag &= ~SOS_MSG_RELIABLE;
 332:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 333:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_count++;
 334:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 335:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 336:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 337:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_SPI_CHANNEL                                        
 338:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (flag_msg_from_spi(m->flag)) {      
 339:/Users/Administrator/sos-2x/kernel/message_net.c **** 		if (msg_count == 0){
 340:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_SPI_LINK_ID] = m;
 341:/Users/Administrator/sos-2x/kernel/message_net.c **** 		} else {
 342:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_SPI_LINK_ID] = msg_duplicate(m);
 343:/Users/Administrator/sos-2x/kernel/message_net.c **** 			if (NULL == mcopy[SOS_SPI_LINK_ID]) goto dispatch_cleanup;
 344:/Users/Administrator/sos-2x/kernel/message_net.c **** 			mcopy[SOS_SPI_LINK_ID]->flag &= ~SOS_MSG_RELIABLE;
 345:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 346:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_count++;
 347:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 348:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 349:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 350:/Users/Administrator/sos-2x/kernel/message_net.c **** 	// Deliver to monitor only once
 351:/Users/Administrator/sos-2x/kernel/message_net.c **** 	monitor_deliver_outgoing_msg_to_monitor(m);
 723               	.LM52:
 724 01e8 C701      		movw r24,r14
 725 01ea 0E94 0000 		call monitor_deliver_outgoing_msg_to_monitor
 352:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 353:/Users/Administrator/sos-2x/kernel/message_net.c ****   // Radio Dispatch
 354:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_RADIO_CHANNEL
 355:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (NULL != mcopy[SOS_RADIO_LINK_ID]){
 727               	.LM53:
 728 01ee 8981      		ldd r24,Y+1
 729 01f0 9A81      		ldd r25,Y+2
 730 01f2 0097      		sbiw r24,0
 731 01f4 11F0      		breq .L28
 356:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_change_endian(mcopy[SOS_RADIO_LINK_ID]);
 357:/Users/Administrator/sos-2x/kernel/message_net.c **** 		SOS_RADIO_LINK_DISPATCH(mcopy[SOS_RADIO_LINK_ID]);
 733               	.LM54:
 734 01f6 0E94 0000 		call radio_msg_alloc
 735               	.L28:
 358:/Users/Administrator/sos-2x/kernel/message_net.c **** 		ker_log( SOS_LOG_POST_NET, mcopy[SOS_RADIO_LINK_ID]->sid, mcopy[SOS_RADIO_LINK_ID]->daddr );
 359:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 360:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 361:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 362:/Users/Administrator/sos-2x/kernel/message_net.c ****   // UART Dispatch
 363:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_UART_CHANNEL
 364:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (NULL != mcopy[SOS_UART_LINK_ID]){
 737               	.LM55:
 738 01fa 8D81      		ldd r24,Y+5
 739 01fc 9E81      		ldd r25,Y+6
 740 01fe 0097      		sbiw r24,0
 741 0200 11F0      		breq .L30
 365:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_change_endian(mcopy[SOS_UART_LINK_ID]);
 366:/Users/Administrator/sos-2x/kernel/message_net.c **** 		SOS_UART_LINK_DISPATCH(mcopy[SOS_UART_LINK_ID]);
 743               	.LM56:
 744 0202 0E94 0000 		call uart_msg_alloc
 745               	.L30:
 367:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 368:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 369:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 370:/Users/Administrator/sos-2x/kernel/message_net.c ****   // I2C Dispatch 
 371:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_I2C_CHANNEL
 372:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (NULL != mcopy[SOS_I2C_LINK_ID]){
 373:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_change_endian(mcopy[SOS_I2C_LINK_ID]);
 374:/Users/Administrator/sos-2x/kernel/message_net.c **** 		SOS_I2C_LINK_DISPATCH(mcopy[SOS_I2C_LINK_ID]);
 375:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 376:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 377:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 378:/Users/Administrator/sos-2x/kernel/message_net.c **** 	// SPI Dispatch
 379:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_SPI_CHANNEL
 380:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if (NULL != mcopy[SOS_SPI_LINK_ID]){
 381:/Users/Administrator/sos-2x/kernel/message_net.c **** 		msg_change_endian(mcopy[SOS_SPI_LINK_ID]);
 382:/Users/Administrator/sos-2x/kernel/message_net.c **** 		SOS_SPI_LINK_DISPATCH(mcopy[SOS_SPI_LINK_ID]);
 383:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 384:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 385:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 386:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return SOS_OK;
 747               	.LM57:
 748 0206 80E0      		ldi r24,lo8(0)
 749 0208 90E0      		ldi r25,hi8(0)
 750 020a 10C0      		rjmp .L8
 751               	.L27:
 752 020c 83E0      		ldi r24,lo8(3)
 753 020e F82E      		mov r15,r24
 754 0210 8501      		movw r16,r10
 755               	.L36:
 756               	.LBB9:
 387:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 388:/Users/Administrator/sos-2x/kernel/message_net.c **** #if defined(SOS_UART_CHANNEL) || defined(SOS_I2C_CHANNEL) || defined(SOS_SPI_CHANNEL)
 389:/Users/Administrator/sos-2x/kernel/message_net.c **** dispatch_cleanup:
 390:/Users/Administrator/sos-2x/kernel/message_net.c **** 	{
 391:/Users/Administrator/sos-2x/kernel/message_net.c **** 		uint8_t i;
 392:/Users/Administrator/sos-2x/kernel/message_net.c **** 		for (i = 0 ; i < NUM_IO_LINKS; i++){
 393:/Users/Administrator/sos-2x/kernel/message_net.c **** 			if (NULL != mcopy[i]){
 758               	.LM58:
 759 0212 D801      		movw r26,r16
 760 0214 8D91      		ld r24,X+
 761 0216 9D91      		ld r25,X+
 762 0218 8D01      		movw r16,r26
 763 021a 0097      		sbiw r24,0
 764 021c 11F0      		breq .L34
 394:/Users/Administrator/sos-2x/kernel/message_net.c **** 				msg_dispose(mcopy[i]);
 766               	.LM59:
 767 021e 0E94 0000 		call msg_dispose
 768               	.L34:
 770               	.LM60:
 771 0222 FA94      		dec r15
 772 0224 F7FE      		sbrs r15,7
 773 0226 F5CF      		rjmp .L36
 774               	.LBE9:
 395:/Users/Administrator/sos-2x/kernel/message_net.c **** 			}
 396:/Users/Administrator/sos-2x/kernel/message_net.c **** 		}
 397:/Users/Administrator/sos-2x/kernel/message_net.c **** 		DEBUG("----------------Cleaning up-----------\n");
 398:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 399:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return -ENOMEM;
 776               	.LM61:
 777 0228 84EF      		ldi r24,lo8(-12)
 778 022a 9FEF      		ldi r25,hi8(-12)
 779               	.L8:
 780               	/* epilogue: frame size=8 */
 781 022c 2896      		adiw r28,8
 782 022e 0FB6      		in __tmp_reg__,__SREG__
 783 0230 F894      		cli
 784 0232 DEBF      		out __SP_H__,r29
 785 0234 0FBE      		out __SREG__,__tmp_reg__
 786 0236 CDBF      		out __SP_L__,r28
 787 0238 DF91      		pop r29
 788 023a CF91      		pop r28
 789 023c 1F91      		pop r17
 790 023e 0F91      		pop r16
 791 0240 FF90      		pop r15
 792 0242 EF90      		pop r14
 793 0244 DF90      		pop r13
 794 0246 CF90      		pop r12
 795 0248 BF90      		pop r11
 796 024a AF90      		pop r10
 797 024c 0895      		ret
 798               	/* epilogue end (size=17) */
 799               	/* function sos_msg_dispatch size 250 (215) */
 815               	.Lscope3:
 825               	.global	post_link
 827               	post_link:
 829               	.LM62:
 830               	/* prologue: frame size=0 */
 831 024e 9F92      		push r9
 832 0250 AF92      		push r10
 833 0252 BF92      		push r11
 834 0254 CF92      		push r12
 835 0256 DF92      		push r13
 836 0258 EF92      		push r14
 837 025a FF92      		push r15
 838 025c 0F93      		push r16
 839 025e 1F93      		push r17
 840 0260 CF93      		push r28
 841               	/* prologue end (size=10) */
 842 0262 B82E      		mov r11,r24
 843 0264 962E      		mov r9,r22
 844 0266 C42F      		mov r28,r20
 845 0268 A22E      		mov r10,r18
 847               	.LM63:
 848 026a 0E94 0000 		call msg_create
 849 026e FC01      		movw r30,r24
 851               	.LM64:
 852 0270 892B      		or r24,r25
 853 0272 49F4      		brne .L41
 855               	.LM65:
 856 0274 E2FE      		sbrs r14,2
 857 0276 04C0      		rjmp .L42
 858               	.LBB10:
 859               	.LBB11:
 861               	.Ltext3:
  97:/Users/Administrator/sos-2x/kernel/include/malloc.h **** }
  98:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
  99:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
 100:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Reallocate dynamic memory
 101:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param pntr Pointer to the currently held block of memory
 102:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param newSize Number of bytes to be allocated
 103:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return Returns the pointer to the reallocated memory.
 104:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * Returns a NULL if unable to reallocate but the original pointer is still valid.
 105:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
 106:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline void* ker_realloc(void* pntr, uint16_t newSize)
 107:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
 108:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   return sos_blk_mem_realloc(pntr, newSize, false);
 109:/Users/Administrator/sos-2x/kernel/include/malloc.h **** }
 110:/Users/Administrator/sos-2x/kernel/include/malloc.h **** 
 111:/Users/Administrator/sos-2x/kernel/include/malloc.h **** /**
 112:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @brief Free memory pointed to by ptr
 113:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @param ptr Pointer to the memory that should be released
 114:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  * @return void
 115:/Users/Administrator/sos-2x/kernel/include/malloc.h ****  */
 116:/Users/Administrator/sos-2x/kernel/include/malloc.h **** static inline void ker_free(void* ptr)
 117:/Users/Administrator/sos-2x/kernel/include/malloc.h **** {
 118:/Users/Administrator/sos-2x/kernel/include/malloc.h ****   sos_blk_mem_free(ptr, false);
 863               	.LM66:
 864 0278 60E0      		ldi r22,lo8(0)
 865 027a C801      		movw r24,r16
 866 027c 0E94 0000 		call sos_blk_mem_free
 867               	.L42:
 868               	.LBE11:
 869               	.LBE10:
 871               	.Ltext4:
 873               	.LM67:
 874 0280 84EF      		ldi r24,lo8(-12)
 875 0282 9FEF      		ldi r25,hi8(-12)
 876 0284 16C0      		rjmp .L40
 877               	.L41:
 879               	.LM68:
 880 0286 C282      		std Z+2,r12
 881 0288 D382      		std Z+3,r13
 883               	.LM69:
 884 028a B082      		st Z,r11
 886               	.LM70:
 887 028c C683      		std Z+6,r28
 889               	.LM71:
 890 028e 8091 0000 		lds r24,node_address
 891 0292 9091 0000 		lds r25,(node_address)+1
 892 0296 8483      		std Z+4,r24
 893 0298 9583      		std Z+5,r25
 895               	.LM72:
 896 029a 9182      		std Z+1,r9
 898               	.LM73:
 899 029c A782      		std Z+7,r10
 901               	.LM74:
 902 029e 0087      		std Z+8,r16
 903 02a0 1187      		std Z+9,r17
 905               	.LM75:
 906 02a2 E286      		std Z+10,r14
 907 02a4 F386      		std Z+11,r15
 909               	.LM76:
 910 02a6 CF01      		movw r24,r30
 911 02a8 0E94 0000 		call sos_msg_dispatch
 912 02ac 9927      		clr r25
 913 02ae 87FD      		sbrc r24,7
 914 02b0 9095      		com r25
 915               	.L40:
 916               	/* epilogue: frame size=0 */
 917 02b2 CF91      		pop r28
 918 02b4 1F91      		pop r17
 919 02b6 0F91      		pop r16
 920 02b8 FF90      		pop r15
 921 02ba EF90      		pop r14
 922 02bc DF90      		pop r13
 923 02be CF90      		pop r12
 924 02c0 BF90      		pop r11
 925 02c2 AF90      		pop r10
 926 02c4 9F90      		pop r9
 927 02c6 0895      		ret
 928               	/* epilogue end (size=11) */
 929               	/* function post_link size 61 (40) */
 934               	.Lscope4:
 938               	.global	post
 940               	post:
 942               	.LM77:
 943               	/* prologue: frame size=0 */
 944 02c8 0F93      		push r16
 945 02ca 1F93      		push r17
 946 02cc CF93      		push r28
 947 02ce DF93      		push r29
 948               	/* prologue end (size=4) */
 949 02d0 EC01      		movw r28,r24
 951               	.LM78:
 952 02d2 0E94 0000 		call msg_create
 953 02d6 8C01      		movw r16,r24
 955               	.LM79:
 956 02d8 892B      		or r24,r25
 957 02da 79F4      		brne .L45
 959               	.LM80:
 960 02dc 8A85      		ldd r24,Y+10
 961 02de 9B85      		ldd r25,Y+11
 962 02e0 82FF      		sbrs r24,2
 963 02e2 08C0      		rjmp .L46
 964               	.LBB12:
 965               	.LBB13:
 967               	.Ltext5:
 969               	.LM81:
 970 02e4 60E0      		ldi r22,lo8(0)
 971 02e6 8885      		ldd r24,Y+8
 972 02e8 9985      		ldd r25,Y+9
 973 02ea 0E94 0000 		call sos_blk_mem_free
 974               	.LBE13:
 975               	.LBE12:
 977               	.Ltext6:
 979               	.LM82:
 980 02ee 0887      		std Y+8,r16
 981 02f0 1987      		std Y+9,r17
 983               	.LM83:
 984 02f2 1F82      		std Y+7,__zero_reg__
 985               	.L46:
 987               	.LM84:
 988 02f4 84EF      		ldi r24,lo8(-12)
 989 02f6 9FEF      		ldi r25,hi8(-12)
 990 02f8 15C0      		rjmp .L44
 991               	.L45:
 993               	.LM85:
 994 02fa 84E1      		ldi r24,lo8(20)
 995 02fc D801      		movw r26,r16
 996 02fe FE01      		movw r30,r28
 997 0300 0190      		ld __tmp_reg__,Z+
 998 0302 0D92      		st X+,__tmp_reg__
 999 0304 8A95      		dec r24
 1000 0306 E1F7      		brne .-8
 1002               	.LM86:
 1003 0308 1F82      		std Y+7,__zero_reg__
 1005               	.LM87:
 1006 030a 1886      		std Y+8,__zero_reg__
 1007 030c 1986      		std Y+9,__zero_reg__
 1009               	.LM88:
 1010 030e 8A85      		ldd r24,Y+10
 1011 0310 9B85      		ldd r25,Y+11
 1012 0312 8B7F      		andi r24,lo8(-5)
 1013 0314 8A87      		std Y+10,r24
 1014 0316 9B87      		std Y+11,r25
 1016               	.LM89:
 1017 0318 C801      		movw r24,r16
 1018 031a 0E94 0000 		call sos_msg_dispatch
 1019 031e 9927      		clr r25
 1020 0320 87FD      		sbrc r24,7
 1021 0322 9095      		com r25
 1022               	.L44:
 1023               	/* epilogue: frame size=0 */
 1024 0324 DF91      		pop r29
 1025 0326 CF91      		pop r28
 1026 0328 1F91      		pop r17
 1027 032a 0F91      		pop r16
 1028 032c 0895      		ret
 1029               	/* epilogue end (size=5) */
 1030               	/* function post size 52 (43) */
 1035               	.Lscope5:
 1044               	.global	ker_sys_post_link
 1046               	ker_sys_post_link:
 400:/Users/Administrator/sos-2x/kernel/message_net.c **** #endif
 401:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 402:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 403:/Users/Administrator/sos-2x/kernel/message_net.c **** //============================================================================
 404:/Users/Administrator/sos-2x/kernel/message_net.c **** // sys APIs
 405:/Users/Administrator/sos-2x/kernel/message_net.c **** //============================================================================
 406:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 407:/Users/Administrator/sos-2x/kernel/message_net.c **** int8_t ker_sys_post_link(sos_pid_t dst_mod_id, uint8_t type,
 408:/Users/Administrator/sos-2x/kernel/message_net.c **** 		uint8_t size, void *data, uint16_t flag, uint16_t dst_node_addr)
 409:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 1048               	.LM90:
 1049               	/* prologue: frame size=0 */
 1050 032e 5F92      		push r5
 1051 0330 6F92      		push r6
 1052 0332 7F92      		push r7
 1053 0334 8F92      		push r8
 1054 0336 9F92      		push r9
 1055 0338 AF92      		push r10
 1056 033a BF92      		push r11
 1057 033c CF92      		push r12
 1058 033e DF92      		push r13
 1059 0340 EF92      		push r14
 1060 0342 FF92      		push r15
 1061 0344 0F93      		push r16
 1062 0346 1F93      		push r17
 1063 0348 CF93      		push r28
 1064               	/* prologue end (size=14) */
 1065 034a 582E      		mov r5,r24
 1066 034c 662E      		mov r6,r22
 1067 034e 742E      		mov r7,r20
 1068 0350 4901      		movw r8,r18
 1069 0352 5801      		movw r10,r16
 410:/Users/Administrator/sos-2x/kernel/message_net.c **** 	sos_pid_t my_id = ker_get_current_pid();
 1071               	.LM91:
 1072 0354 0E94 0000 		call ker_get_current_pid
 1073 0358 C82F      		mov r28,r24
 411:/Users/Administrator/sos-2x/kernel/message_net.c **** 	
 412:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if( post_link(dst_mod_id, my_id, type, size, data, flag, dst_node_addr) != SOS_OK) {
 1075               	.LM92:
 1076 035a 6701      		movw r12,r14
 1077 035c 7501      		movw r14,r10
 1078 035e 8401      		movw r16,r8
 1079 0360 272D      		mov r18,r7
 1080 0362 462D      		mov r20,r6
 1081 0364 682F      		mov r22,r24
 1082 0366 852D      		mov r24,r5
 1083 0368 0E94 0000 		call post_link
 1084 036c 8823      		tst r24
 1085 036e 39F0      		breq .L49
 413:/Users/Administrator/sos-2x/kernel/message_net.c **** 		return ker_mod_panic(my_id);
 1087               	.LM93:
 1088 0370 8C2F      		mov r24,r28
 1089 0372 0E94 0000 		call ker_mod_panic
 1090 0376 9927      		clr r25
 1091 0378 87FD      		sbrc r24,7
 1092 037a 9095      		com r25
 1093 037c 02C0      		rjmp .L48
 1094               	.L49:
 414:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 415:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return SOS_OK;
 1096               	.LM94:
 1097 037e 80E0      		ldi r24,lo8(0)
 1098 0380 90E0      		ldi r25,hi8(0)
 1099               	.L48:
 1100               	/* epilogue: frame size=0 */
 1101 0382 CF91      		pop r28
 1102 0384 1F91      		pop r17
 1103 0386 0F91      		pop r16
 1104 0388 FF90      		pop r15
 1105 038a EF90      		pop r14
 1106 038c DF90      		pop r13
 1107 038e CF90      		pop r12
 1108 0390 BF90      		pop r11
 1109 0392 AF90      		pop r10
 1110 0394 9F90      		pop r9
 1111 0396 8F90      		pop r8
 1112 0398 7F90      		pop r7
 1113 039a 6F90      		pop r6
 1114 039c 5F90      		pop r5
 1115 039e 0895      		ret
 1116               	/* epilogue end (size=15) */
 1117               	/* function ker_sys_post_link size 57 (28) */
 1122               	.Lscope6:
 1126               	.global	ker_sys_routing_register
 1128               	ker_sys_routing_register:
 416:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 417:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 418:/Users/Administrator/sos-2x/kernel/message_net.c **** int8_t ker_sys_routing_register( uint8_t fid )
 419:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 1130               	.LM95:
 1131               	/* prologue: frame size=0 */
 1132 03a0 1F93      		push r17
 1133               	/* prologue end (size=1) */
 1134 03a2 182F      		mov r17,r24
 420:/Users/Administrator/sos-2x/kernel/message_net.c **** 	sos_pid_t sub_id = ker_get_current_pid();
 1136               	.LM96:
 1137 03a4 0E94 0000 		call ker_get_current_pid
 421:/Users/Administrator/sos-2x/kernel/message_net.c **** 	
 422:/Users/Administrator/sos-2x/kernel/message_net.c **** 	if(ker_fntable_subscribe(KER_ROUTING_PID, sub_id, fid, 0) != SOS_OK) {
 1139               	.LM97:
 1140 03a8 20E0      		ldi r18,lo8(0)
 1141 03aa 412F      		mov r20,r17
 1142 03ac 682F      		mov r22,r24
 1143 03ae 84E1      		ldi r24,lo8(20)
 1144 03b0 0E94 0000 		call ker_fntable_subscribe
 1145 03b4 8823      		tst r24
 1146 03b6 19F0      		breq .L51
 423:/Users/Administrator/sos-2x/kernel/message_net.c **** 		return -EINVAL;
 1148               	.LM98:
 1149 03b8 8AEE      		ldi r24,lo8(-22)
 1150 03ba 9FEF      		ldi r25,hi8(-22)
 1151 03bc 02C0      		rjmp .L50
 1152               	.L51:
 424:/Users/Administrator/sos-2x/kernel/message_net.c **** 	}
 425:/Users/Administrator/sos-2x/kernel/message_net.c **** 	return SOS_OK;
 1154               	.LM99:
 1155 03be 80E0      		ldi r24,lo8(0)
 1156 03c0 90E0      		ldi r25,hi8(0)
 1157               	.L50:
 1158               	/* epilogue: frame size=0 */
 1159 03c2 1F91      		pop r17
 1160 03c4 0895      		ret
 1161               	/* epilogue end (size=2) */
 1162               	/* function ker_sys_routing_register size 19 (16) */
 1167               	.Lscope7:
 1170               	.global	routing_init
 1172               	routing_init:
 426:/Users/Administrator/sos-2x/kernel/message_net.c **** }
 427:/Users/Administrator/sos-2x/kernel/message_net.c **** 
 428:/Users/Administrator/sos-2x/kernel/message_net.c **** void routing_init( void )
 429:/Users/Administrator/sos-2x/kernel/message_net.c **** {
 1174               	.LM100:
 1175               	/* prologue: frame size=0 */
 1176               	/* prologue end (size=0) */
 430:/Users/Administrator/sos-2x/kernel/message_net.c **** #ifdef SOS_USE_PREEMPTION
 431:/Users/Administrator/sos-2x/kernel/message_net.c **** 	ker_register_module(sos_get_header_address(mod_header));
 432:/Users/Administrator/sos-2x/kernel/message_net.c **** 	routing_func_ptr = ker_get_module_state(KER_SENSOR_PID);
 433:/Users/Administrator/sos-2x/kernel/message_net.c **** #else
 434:/Users/Administrator/sos-2x/kernel/message_net.c **** 	sched_register_kernel_module( &routing_module, sos_get_header_address(mod_header), routing_func_pt
 1178               	.LM101:
 1179 03c6 80E0      		ldi r24,lo8(mod_header)
 1180 03c8 90E0      		ldi r25,hi8(mod_header)
 1181 03ca AA27      		clr r26
 1182 03cc 97FD      		sbrc r25,7
 1183 03ce A095      		com r26
 1184 03d0 BA2F      		mov r27,r26
 1185 03d2 B695      		lsr r27
 1186 03d4 A795      		ror r26
 1187 03d6 9795      		ror r25
 1188 03d8 8795      		ror r24
 1189 03da 40E0      		ldi r20,lo8(routing_func_ptr)
 1190 03dc 50E0      		ldi r21,hi8(routing_func_ptr)
 1191 03de BC01      		movw r22,r24
 1192 03e0 80E0      		ldi r24,lo8(routing_module)
 1193 03e2 90E0      		ldi r25,hi8(routing_module)
 1194 03e4 0E94 0000 		call sched_register_kernel_module
 1195               	/* epilogue: frame size=0 */
 1196 03e8 0895      		ret
 1197               	/* epilogue end (size=1) */
 1198               	/* function routing_init size 18 (17) */
 1200               	.Lscope8:
 1202               		.lcomm routing_module,8
 1203               		.lcomm routing_func_ptr,2
 1207               		.text
 1209               	Letext:
 1210               	/* File "/Users/Administrator/sos-2x/kernel/message_net.c": code  508 = 0x01fc ( 401), prologues  5
DEFINED SYMBOLS
                            *ABS*:00000000 message_net.c
                            *ABS*:0000003f __SREG__
                            *ABS*:0000003e __SP_H__
                            *ABS*:0000003d __SP_L__
                            *ABS*:00000000 __tmp_reg__
                            *ABS*:00000001 __zero_reg__
/var/tmp//ccDVdLEo.s:299    .progmem.data:00000000 mod_header
/var/tmp//ccDVdLEo.s:336    .text:00000006 routing_handler
/var/tmp//ccDVdLEo.s:316    .text:00000000 no_router
/var/tmp//ccDVdLEo.s:355    .text:0000000c sos_msg_find_right_link
/var/tmp//ccDVdLEo.s:437    .text:00000060 sos_msg_dispatch
/var/tmp//ccDVdLEo.s:1202   .bss:00000008 routing_func_ptr
/var/tmp//ccDVdLEo.s:827    .text:0000024e post_link
/var/tmp//ccDVdLEo.s:940    .text:000002c8 post
/var/tmp//ccDVdLEo.s:1046   .text:0000032e ker_sys_post_link
/var/tmp//ccDVdLEo.s:1128   .text:000003a0 ker_sys_routing_register
/var/tmp//ccDVdLEo.s:1172   .text:000003c6 routing_init
                             .bss:00000000 routing_module
/var/tmp//ccDVdLEo.s:1209   .text:000003ea Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
check_uart_address
node_address
sched_msg_alloc
msg_dispose
msg_send_senddone
msg_create
sos_blk_mem_alloc
memcpy
monitor_deliver_outgoing_msg_to_monitor
radio_msg_alloc
uart_msg_alloc
sos_blk_mem_free
ker_get_current_pid
ker_mod_panic
ker_fntable_subscribe
sched_register_kernel_module
