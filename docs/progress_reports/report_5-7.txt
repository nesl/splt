Preemption:
Last Week:
- A very basic and rudimentary form of preemption is now working.
We are able to preempt properly when one module sends a message to another.
If the receiver has higher priority, the current module is preempted and 
the receiver runs.
- We have implemented code where the messages from timer interrupts are also 
appropriately delivered in the new code base.
However there are certain bugs in this and we are working on fixing them.

This Week:
- We will try to have the preemption from the timer side working properly.
After this, we will be going through a cycle of debugging and ensuring
that the correct form of preemption is occuring at the right place.
-When this is complete, we will start verfying the continual operation of
the existing drivers.
-We also plan on having preemption when a sos_call is used.

Power Measurement:

- Studied the Stargate2 hardware to figure out the hardware interfacing to
the WUPro's USB port. 
- Tested three of the Stargate2 boards we have and they all stop at the login
prompt and dont go any further.
- Downloaded the image files of the SG2 but was unable to follow
  instructions to reflash the boards
- Considered using the Linksys NSLU2 network storage device (also being used
in the NetCar project) for providing the USB host connectivity. The mote
would be connected to the other USB port of the same device through a USB
programmer
- Received four WUPro devices. Discovered that the USB interface was using a
  common RS232 to USB FTDI chip, the FT232RL. 
- It seems possible to bypass this whole USB host problem by picking up the
  UART signal directly from the board.
- The UART levels on the WUPro are 3.3V LVTTL levels and thus it is
  straightforward to interface to a Mote later.
- To test the UART interface with a PC, the UART interface was connected to
  a BlueSmirf RS232 to Bluetooth radio module.
- The power for the BlueSmirf module was initially derived from the WUPro
  itself, but realized that the WUPro could not source enough current and
was constantly resetting. Thus, we used an external adjustable power supply being fed AC mains power from the WUPro to power the BlueSmirf.
- Using a host with a Bluetooth interface, we wanted to test the serial
  interface to the WUPro and when we did not get anything on the terminal
screen, we decided to use an oscope to debug the issue.
- Connecting the oscope ground to the power supply ground caused a small
  explosion and the victim was the WUPro. A number of small components on
the WUPro have busted.



RFID:


