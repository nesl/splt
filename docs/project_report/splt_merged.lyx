#LyX 1.4.3 created this file. For more info see http://www.lyx.org/
\lyxformat 245
\begin_document
\begin_header
\textclass IEEEtran
\language english
\inputencoding auto
\fontscheme default
\graphics default
\paperfontsize default
\spacing single
\papersize default
\use_geometry false
\use_amsmath 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\end_header

\begin_body

\begin_layout Title
Spotlight: Focusing on the Individual
\end_layout

\begin_layout Abstract
\begin_inset LatexCommand \label{sec:Abstract}

\end_inset

We present an application that can monitor the electrical energy consumption
 of an individual in an office setting with sharable and non-sharable appliances.
 A sharable appliance is one that multiple personnel can use at the same
 time like lights in a lab, television, etc.
 A non-sharable appliance is one that only one person uses at a time like
 microwave, coffee-maker, etc.
 All non-sharable appliances are instrumented to consist of a power-meter
 and a RFID reader.
 The user carries a RFID tag which is read by the instrument when it is
 in use by the user.
 Each non-sharable appliance has a power meter and a defining border with
 controlled entry and exit points.
 Personnel entring and exiting the range are detected.
 The power consumption is equally divided between the people sharing the
 appliance.
\end_layout

\begin_layout Section
Introduction
\begin_inset LatexCommand \label{sec:Introduction}

\end_inset


\end_layout

\begin_layout Standard
Presently all consumption monitoring is at the granularity of when the energy
 was used and where it was used.
 This measurement profile is very coarse and there is no notion of who used
 this energy.
 As the energy cost increase, it is becoming important to monitor the consumptio
n at a finer granularity like at the level of individuals.
 This will allow organizations to optimize energy consumption in various
 ways.
 Employees can be assigned 
\begin_inset Quotes eld
\end_inset

green
\begin_inset Quotes erd
\end_inset

 points based on the amount of energy they consumption and can offer incentives
 to decrease their consumption.
 When this information is combined with the information of where and when,
 organizations can better pinpoint areas of energy wastage and can optimize
 the consumption in certain places.
 
\end_layout

\begin_layout Standard
We will attempt a basic attempt at monitoring individual consumption profile
 and try to offer some analysis at some of issues in solving this problem.
 Our results show that it is possible to carry out such profiling at an
 individual level with reasonable assumptions.
 Using our results a more sophisticated and detailed application can be
 constructed which would carry out such profiling for more appliances and
 collected more data.
 
\end_layout

\begin_layout Standard
This document is structured as follows.
 Section 
\begin_inset LatexCommand \ref{sec:App}

\end_inset

 describes our introductory application and some of its limitations.
 ....
 Section 
\begin_inset LatexCommand \ref{sec:R-Algoriths}

\end_inset

 describes the R algorithms used to analyze the data to construct a consumption
 profile of a user.
 We offer some results in section 
\begin_inset LatexCommand \ref{sec:Results}

\end_inset

.
 Finally we detail some related work in section 
\begin_inset LatexCommand \ref{sec:Related-Work}

\end_inset

 and conclude in section 
\begin_inset LatexCommand \ref{sec:Conclusion}

\end_inset

.
\end_layout

\begin_layout Section
Application
\begin_inset LatexCommand \label{sec:App}

\end_inset


\end_layout

\begin_layout Standard
We discuss our introductory application and some of the limitations of the
 application.
\end_layout

\begin_layout Subsection
Application Details
\begin_inset LatexCommand \label{sub:Application-Details}

\end_inset


\end_layout

\begin_layout Standard
We had a number of constraints in developing our application.
 We had only two power-meters are our disposal and we were short of the
 number of appliances that we can use.
 Therefore, we instrumented the coffee-maker and the soldering station in
 our lab.
 These two will serve as the non-sharable appliances as only one person
 can use it at any time.
 Both consist of a RFID reader and a power-meter.
 The reader sits on top of the appliance and is connected to a mote.
 The power-meter monitors the energy flowing into the appliance and is also
 connected to another mote.
 Both appliances have two motes each.
 
\end_layout

\begin_layout Standard
We monitor the lights in our lab as the sharable appliance.
 We are unable to hook a power-meter to the lights fixture so we will estimate
 the energy consumption of them.
 The range of the lights appliance is defined to be the entire lab.
 So anyone present in the lab is sharing its consumption.
 The entry and exit points of the lab are the doors.
 We established one RFID reader at each door.
 This collects the RFID reading on people whenever they enter or exit the
 lab.
 Then using a algorithm on the backend, we will determine when a person
 is entering or leaving the lab.
 Our lab has two doors so two RFID readers were required to instrument the
 doors.
 
\end_layout

\begin_layout Standard
The motes on the appliances collect the RFID or power-meter data and transmit
 to the basestation.
 Since the deployment for this lab spanned a vast area, we had to use an
 additional mote to serve as a hop for all the motes to be able to send
 data to the basestation.
 We used an additional mote to serve as a basestation.
 The basestation is connected to a gumstix which sends all the collected
 data to sensorbase using an ethernet internet connection.
\end_layout

\begin_layout Standard
We use sensorbase to aggregate all our data.
 The data is sent to it through the basestation.
 Then we can probe sensorbase for the collected data on the backend where
 we run different algorithms written in R to compute the individual power
 consumption.
 The total amount of hardware used in the application is eight motes, two
 power-meters, four RFID readers, one gumstix and numerous RFID tags.
 
\end_layout

\begin_layout Subsection
Limitations
\begin_inset LatexCommand \label{sub:Limitations}

\end_inset


\end_layout

\begin_layout Standard
There are certain limitations with our application which will have to be
 addressed for it to be used successfully in a real world deployment.
 One fundamental limitation steams from our divisioin of appliances into
 sharable and non-sharable.
 There are certain appliances that do not necessarily fall in either category.
 A good example of this is servers and computers.
 Servers have a complicated consumption profile which to a certain extend
 tends to be independent of the usage profile of it.
 In order to properly evaluate the individual profile for a server, we need
 to monitor a log of which user is actively running tasks on the system.
 Presently, we are monitoring the printer by assuming that the user performing
 the print job will pick up the work shortly afterwards.
 If another person initiates another print job before the previous one is
 picked up, the profile will be incorrect.
 One way of improving this is to use print logs to determine the profile
 instead of using RFID tags.
 The printer in our lab does not maintain any such information but in a
 general setting, it will be possible to maintain such profiling.
 
\end_layout

\begin_layout Standard
Presently, there is no policing in the usage profiling.
 Anyone can use the appliance and as long as they do not register their
 RFID tags, it will not be counted against them.
 Some ways of improving this is to instrument the appliances such that a
 RFID registery is required in order to activate them.
 This would require significant effort and is beyond the scope of this document
 but easily implemented in a general setting.
 Finally, we did not instrument the light fixtures in out lab to retrive
 consumption data.
 We simply profile the the details of the lab occupancy to model our sharable
 appliances.
 
\end_layout

\begin_layout Section
Power Measurement
\begin_inset LatexCommand \label{sec:Power-Measurement}

\end_inset


\end_layout

\begin_layout Subsection
Power Meter Selection
\end_layout

\begin_layout Standard
Two units for measuring power consumption have been studied - Veris Hawkeye
 8035/8036 and Watts Up? Pro.
 
\end_layout

\begin_layout Standard
The Veris H8035/8036 device shown in Figure 
\begin_inset LatexCommand \ref{fig:Veris-Hawkeye-8035}

\end_inset

 is a CT based power meter with an RS-485 interface featuring a MODBUS Networked
 kW/kWH Transducer.
 The H8035 and H8036, three-phase power transducers monitor energy parameters
 from Aggregate kW (demand) and kWH (consumption) to power factor per phase.
 The H8035/36 Series combines a microprocessor based power meter and split-core
 instrument grade current transformers (CTs) in a single unit.
 The meter has the ability to sense up to 100 Amps of current with 100mW
 precision at a 6 Hz sampling rate.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename veris8036.png
	lyxscale 25
	height 1.5in

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Veris-Hawkeye-8035}

\end_inset

Veris Hawkeye 8035
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The Watts Up? Pro device shown in Figure 
\begin_inset LatexCommand \ref{fig:Watts-Up?-Pro}

\end_inset

 is a consumer friendly power meter that has a USB interface and Windows
 based software to read the meter.
 One simply requires to plug any device into Watts up?, and the meter instantane
ously displays the wattage being used.
 The meter can be used in internal logging mode where it records all the
 data into non-volatile memory.
 The sample rate is user selectable or can be automatically set (resolution
 decreases over time as memory fills up).
 In addition, the meter is capable of real time external logging to a host
 interfaced with the meter.
 The communication protocol is well documented, including a list of commands
 required for real-time logging.
 The maximum sampling rate of the Watts Up? Pro is once per second, with
 a 100mW precision.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename wupro.png
	lyxscale 25
	height 1.5in

\end_inset


\end_layout

\begin_layout Caption
\noindent
\begin_inset LatexCommand \label{fig:Watts-Up?-Pro}

\end_inset

Watts Up? Pro
\end_layout

\end_inset


\end_layout

\begin_layout Standard
The device chosen for current implementation of Spotlight is the Watts Up?
 Pro.
 There are a number of reasons for this.
 Firstly, the Veris device needs to strip off the cable cladding to get
 the clamps on the wires whereas the Watts Up? is plug and play.
 Using the Veris device leads to installation hassles especially when one
 would like to characterize energy consumption of consumer end appliances.
 Second, the Veris device does not have any display, whereas the Watts Up?
 has a simple built-in LCD display.
 Usage of the LCD reduced development time of the communication protocol
 and drivers considerably.
 Thirdly, the Veris device has an RS485 interface for which an independent
 hardware interface circuit would have to be built and tested before any
 other development could begin.
 The interface for Watts Up? is USB, with PC software provided by the manufactur
er.
 This feature expedited the development of the project since it was possible
 to parallelize various parts of the implementation.
 Also, no extra hardware interface circuit would be required, further reducing
 development time.
 In addition, the protocol and code for the Watts Up? Pro are both available
 from the manufacturer.
 Last but not the least, the Veris device is over 6 times more expensive
 than the Watts Up? Pro.
\end_layout

\begin_layout Subsection
Hardware Interfacing
\end_layout

\begin_layout Standard
The only initial concern in using the Watts Up? Pro for Spotlight was the
 USB interface.
 The USB interface poses a problem for the project since the mote being
 used, the MicaZ, does not have a USB interface.
 To circumvent this, one idea was to use a mote with a USB host interface,
 the iMote2.
 However, a quick review revealed that the pins exposed for the USB host
 are present on the advanced 40-pin connector but to use it would require
 to build a small custom board.
 To avoid the delay associated with the custom board design, we sought another
 solution.
\end_layout

\begin_layout Standard
When we studied the Watts Up? Pro device internals, we discovered that the
 USB interface was implemented using a common UART to USB part from Future
 Technology Devices International (FTDI) - FT232RL.
 It seemed possible to bypass the USB host problem entirely by intercepting
 the UART signals directly on the circuit board.
 Further, the voltage levels of the UART on the Watts Up? Pro are 3.3V LVTTL
 rendering it straightforward to interface to a MicaZ mote, which uses the
 same levels.
 
\end_layout

\begin_layout Standard
For power isolation, the Watts Up? Pro uses an Analog Devices ADuM1201 Dual
 Channel Digital Isolator just prior to feeding the UART signals into the
 FT232RL chip.
 Intercepting the UART signals meant connecting the mote between the ADuM1201
 and the FT232RL, requiring to disconnect the tracks between the devices.
 In addition, it was found that the ADUM1201 was powered through the USB
 interface.
 Since the USB port is now disabled, the ADuM1201 has to be powered from
 the mote a drain of about 2mA.
 In summary, the hardware interface from the Watts Up? Pro to the MicaZ
 mote was performed by disconnecting four signals (Vdd, Rx, Tx, Gnd) between
 the ADuM1201 and the FT232RL and connecting those signals to the mote.
 A small custom board is used to connect the signals to the appropriate
 pins on the 51-pin mote connector.
\end_layout

\begin_layout Subsection
Software Interfacing
\end_layout

\begin_layout Standard
In order to interface the Watts Up? Pro with SOS running on the MicaZ mote,
 a new UART driver was needed.
 The current UART driver in the SOS kernel implements a framing based protocol
 architecture assuming that SOS messages flow on the UART channel.
 The Watts Up? Pro on the other hand has its own framing and message structure
 as does the RFID reader described in {section blah}.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename swinterface_z.png
	lyxscale 25
	width 60col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Raw-UART-Driver}

\end_inset

Raw UART Driver Software Stack
\end_layout

\end_inset

Figure 
\begin_inset LatexCommand \ref{fig:Raw-UART-Driver}

\end_inset

 illustrates the software components developed to implement a custom UART
 driver.
 The driver is implemented as an SOS module, and reuses the UART HAL and
 timers provided within SOS.
 The RFID and PM (power measurement) modules implement device specific protocol
 communication such as device initializaton and message parsing.
 The raw UART module provides a messaging interface to the PM and RFID.
 Each frame received on the UART link is forwarded as an SOS message to
 the highler layer module.
 However, since a raw channel does not provide any explicit framing mechanism,
 some method must be devised to find frame delimiters.
 
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename ifd_z.png
	lyxscale 25
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Frames-on-the}

\end_inset

Frames on the raw UART channel 
\end_layout

\end_inset

 Figure 
\begin_inset LatexCommand \ref{fig:Frames-on-the}

\end_inset

 shows how frames typically appear on the UART channel.
 It is noted that frames usually arrive with some minimum delay between
 frames called the inter frame delay or IFD.
 By exploiting this fact, the raw UART module can derive the size of frame.
 
\end_layout

\begin_layout Standard
The UART HAL implements an interrupt service routine that is called on reception
 of every byte on the UART channel.
 The raw UART module restarts a timer with the minimum IFD on every receive
 interrupt.
 The key idea is that if a new byte arrived before the IFD passed, the timer
 would get restarted without firing.
 Thus, when the timer does fire, it implies that a new byte has not been
 received for IFD time, indicating the end of the current frame.
 At this point, the raw UART module bundles up the data it has already received
 for that frame into an SOS message and posts it to one of the higher layer
 modules.
 This is the scheme for data reception, the case for data transmission is
 much simpler.
 The higher layer PM (or RFID) module posts a message to the raw UART module
 indicating the payload should be transmitted on the UART, handled by the
 transmit interrupt service routine.
 This IFD is typically device specific and depends on the baud rate as well
 and thus the raw UART module requires to provide an API to the PM and RFID
 module to access the UART channel correctly.
\end_layout

\begin_layout Standard
An important issue that comes up with very short IFD at high baud rates
 is that the timer API in SOS has a 500+ cycle latency, requring 
\begin_inset Formula $62.5\mu s$
\end_inset

 to complete on an 
\begin_inset Formula $8MHz$
\end_inset

 ATMega128 AVR processor.
 The highest baud rate of 
\begin_inset Formula $115.2kbps$
\end_inset

 interrupts the processor once every 
\begin_inset Formula $86\mu s$
\end_inset

 leaving a small margin for the processor to complete other tasks.
 To circumvent this issue, a couple of methods have been proposed.
 The first mechanism uses the SOS counter API, which has a smaller (50 cycle)
 latency, to measure the time difference between byte interrupts.
 When the time difference between two bytes is found to be greater than
 the IFD, it indicates that a new frame has just begun and the latter byte
 is the first byte of a new frame.
 Note that this method posts a message only after the first byte of a new
 frame and thus the message delivery latency could be unbounded.
 In other words, this mechanism works well when the device connected to
 the UART is generating a constant stream of data frames.
 If, however, the data frames arrive at sporadic intervals a frame is not
 delivered until the next frame has just begun.
 The other issue with this form of system is that since the processor spends
 time posting an SOS message as a new frame is arriving, the message post
 latency has to be less than the interrupt rate.
 The second idea is to exploit some knowledge of the frames, such as header
 or trailer bytes or size (for fixed length frames).
 This last idea was implemented in the Spotlight project and has served
 its purpose well.
\end_layout

\begin_layout Standard

\end_layout

\begin_layout Standard

\end_layout

\begin_layout Section
RFID
\begin_inset LatexCommand \label{sec:RFID}

\end_inset


\end_layout

\begin_layout Subsection
RFID Reader Hardware 
\end_layout

\begin_layout Standard
Since we found SkyeTek RFID reader in the backroom, we chose it.
 There were two choices, SkyeTek M1 and SkyeTek M1-mini.
 The former one is a bigger one and the latter one is smaller.
 One key difference between SkyeTek M1 and SkyeTek M1-mini is that the mini
 accepts variable Vcc(From 1.8V to 5V) which allows a MicaZ mote to supply
 power.
 
\end_layout

\begin_layout Standard
SkyeTek RFID reader supports various TAG reading modes as well as other
 functions such as writing and/or selecting TAGs.
 And it is compatible to ISO15693 passive RFID TAG families such as Tag-It
 HF-I(Texas Instrument), I-Code SLI(Phillips), my-d SRF55VxxP(Infineon),
 and LRI512(ST-Microelectronics), which means there's no concern with TAG
 compatibility issues.
 
\end_layout

\begin_layout Standard
Since SkyeTek M1-mini supports 3.3V TTL level UART interface, it can be directly
 connected to a MicaZ mote.
 Similar to the Watts Up Pro case, a small custom board is used to connect
 the (Vcc, Rx, Tx, GND) signals to the appropriate pins on the 51-pin mote
 connector.
 
\end_layout

\begin_layout Subsection
Software Interfacing
\end_layout

\begin_layout Standard
The only concern for the RFID mote was the same as for the Watts Up Pro.
 It also requires RAW UART communication.
 To cope with it, we used the same RAW UART communication module for the
 RFID mote as for the Watts Up Pro mote.
\end_layout

\begin_layout Standard
Although the RFID reader supports various reading modes, for our system
 we only need the continuous reading mode where the RFID reader sends TAG
 ID readings when TAGs are within the range, otherwise no data signal is
 generated.
 The RFID mote consists of the four SOS modules called 
\begin_inset Quotes eld
\end_inset

Neighbor
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

Tree Routing
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

UART Module
\begin_inset Quotes erd
\end_inset

, and 
\begin_inset Quotes eld
\end_inset

RFID Module
\begin_inset Quotes erd
\end_inset

.
 The 
\begin_inset Quotes eld
\end_inset

Neighbor
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

Tree Routing
\begin_inset Quotes erd
\end_inset

 modules are used to enable multi-hop communication because our SpotLight
 system aims to be extensible to environment where the multi-hop communication
 is needed.
 As shown in 
\begin_inset LatexCommand \ref{section}

\end_inset

, UART module is used to strip headers of standard SOS message and make
 them RAW UART communication packets and vice versa.
 In other words, the UART module accepts and strips SOS_UART_send message
 and transmits RAW UART data strings to USARTx of the MicaZ mote.
 The RFID module is the main software interface for the RFID module.
 When the module starts, it initializes the SkyeTek M1-mini RFID reader
 and set it into the 
\begin_inset Quotes eld
\end_inset

Continuous Reading
\begin_inset Quotes erd
\end_inset

 mode.
 As soon as it receives any TAG ID readings, it forwards the data to the
 
\begin_inset Quotes eld
\end_inset

Tree Routing module.
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename rfidsw.jpg
	lyxscale 25
	width 60col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:RFID-mote-SOS}

\end_inset

RFID mote SOS S/W
\end_layout

\end_inset


\end_layout

\begin_layout Section
Back-end System
\begin_inset LatexCommand \label{sec:Back-end-System}

\end_inset


\end_layout

\begin_layout Subsection
Hardware Architecture
\end_layout

\begin_layout Standard
To meet the second project requirement, we decided to set up a backend side
 with a gumstix.
 The gumstix is a finger size, full-function Linux computer which can expand
 its functionality by stacking various expansion boards.
 Firstly, we stacked NetCFstix to support ethernet connectivity which enables
 the backend to send sensor readings to the sensorbase on the fly.
 For interfacing the backend and the infrastructure sensor nodes, we used
 BreakoutGs which provides most of all pinouts of the gumstix.
 The base sensor node is connected to the gumstix over the serial line through
 the BreakoutGS board.
 
\end_layout

\begin_layout Standard
By introducing a way small size of the backbone computer, we are envisioning
 that the SpotLight system will be embedded to various environment such
 as smart home, smart building, and smart office environments as illustrated
 in 
\begin_inset LatexCommand \ref{Section}

\end_inset

.
 Advantages of the backbone system are obvious.
 It doesn't require a big size server or a desktop computer, but provides
 relatively high computing power (Intel PXA255 400Mhz) which allows us to
 do more sophisticated data pre-processing than the mote class device can
 do.
 On one hand, it provides the SSH service and has the Internet connectivity,
 remote maintenance is also possible through the Internet connection.
 
\end_layout

\begin_layout Subsection
Software Architecture
\end_layout

\begin_layout Standard
On the backend, we run two applications, which are the sos-server and the
 backend application.
 The sos-server basically opens a serial port to receive and send messages
 from/to a base sensor node.
 It also opens a network socket on the localhost so that other applications
 can communicate with the base node.
 
\end_layout

\begin_layout Standard
On the other hand, the backend application, which consists of several python
 modules such as pySOSmodule, PowerMeasurementParser, RFIDParser, XMLmodule
 and spltSlogmodule, translates data from the infrastructure nodes and sends
 the results to the sensorbase.
 The pySOS provides several APIs for the SOSmessage communication.
 One can initialize pySOS module using 
\begin_inset Quotes eld
\end_inset

pysos.sossrv()
\begin_inset Quotes erd
\end_inset

 which makes a socket connection to the sos-server through the localhost.
 Then 
\begin_inset Quotes eld
\end_inset

pysos.post()
\begin_inset Quotes erd
\end_inset

 can be used for posting SOSmessages and 
\begin_inset Quotes eld
\end_inset

pysos.listen()
\begin_inset Quotes erd
\end_inset

 allows us to receive SOSmessages.
 More detailed tutorial can be found at 
\begin_inset LatexCommand \cite{pysos}

\end_inset

.
 
\end_layout

\begin_layout Standard
Since PowerMeasurement and RFID motes have their own protocol, we needed
 to write translator modules which are PMparser and RFIDparser, respectively.
 The reason why we use the backend for translating those information is
 because they are strings and string processes are not well supported by
 SOS.
 
\end_layout

\begin_layout Standard
The protocol for the Watts Up Pro is an ASCII string 
\begin_inset Quotes eld
\end_inset

#d,-,18,<W>,<V>,<A>,...;<CR><LF>
\begin_inset Quotes erd
\end_inset

 which implies (Command, NumberofArgument, Watt, Voltage, Ampere, ...).
 PM mote forwards its powermeasurement reading with its network ID every
 one second.
 PMparser basically translates those two information into the 5 tuples (TimeStam
p, ApplianceID, Ampere, Watt, Voltage).
 
\end_layout

\begin_layout Standard
The protocol of the RFID reader is simpler than that of the PM.
 The packet from the RFID motes consists of their network address and TAG
 ID reading.
 Similarly, it translates these information into three tuples (TimeStamp,
 ApplianceID, TAG ID).
 
\end_layout

\begin_layout Standard
After both of translator modules make the data in appropriate form, XML
 module generates appropriate sensorbase XML scripts from the data which
 will eventually be sent to the sensorbase.
 Then it puts these XML packets into a queue where spltSlog module, which
 allows us to slog on the fly, grabs the data and sends it to the sensorbase.
 Once sets of all the tuples are stored at the predefined PowerMeasurement
 table and RFID table in the sensorbase, it can be used for off-line analysis
 as described in 
\begin_inset LatexCommand \ref{sec:R-Algoriths}

\end_inset

.
 
\end_layout

\begin_layout Section
R Algoriths 
\begin_inset LatexCommand \label{sec:R-Algoriths}

\end_inset


\end_layout

\begin_layout Standard
We constructed two usage profile in our application: one for the sharable
 appliances and one for the non-sharable.
 
\end_layout

\begin_layout Subsection
Sharable Appliances
\end_layout

\begin_layout Standard
For the sharable appliances, we need to construct an occupancy profile of
 the users.
 We do this by collecting RFID tag information on when the users enter and
 leave the lab.
 We assume that the user deligently tag him/herself when entering and leaving
 the lab.
 Our data collection profile is robust enough to ensure no lost information.
 We start by assuming that no user is present in the lab.
 Then whenever a RFID tag is received, it is believed that the user has
 entered the lab and on the next occurance of the tag, it is believed that
 the user has left the lab.
 Whenever anyone enters or leaves the lab, we calculate the additional power
 consumed by each user present in the lab during that duration and add it
 to his/her total power consumption.
 
\end_layout

\begin_layout Subsection
Non-sharable Appliances
\end_layout

\begin_layout Standard
For non-sharable appliances, we simply detect usage by RFID readings.
 Whenever we get a RFID reading on a particular appliance, we determine
 that the appliance is used between a given interval before and after the
 reading.
 We will detect any appliance usage in this interval and allocate that consumpti
on to the particular RFID reading.
 
\end_layout

\begin_layout Standard
Before we can determine an appliance use, we need to filter out the transients
 in the usage profile.
 From the data collected from the power-meter, we have power readings of
 the appliance at regular intervals.
 We smooth out these readings by applying a exponentially weighted moving
 average filter to the stream.
 The equation of the filter is the following:
\end_layout

\begin_layout Standard
\align center
\begin_inset Formula $y(n)=\alpha x(n)+(1-\alpha)y(n-1)$
\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula $\alpha$
\end_inset

 has to be smaller than 1.
 Picking a big value for 
\begin_inset Formula $\alpha$
\end_inset

 emphasis the actual stream over the history and a smaller value emphasis
 the history over stream.
 Therefore, a small value will filter out more transients from the streams.
 We pick a modest value of 0.1 for removing the transients from our data
 stream.
 We will be using this filtered stream for all our data processing in this
 section.
\end_layout

\begin_layout Standard
We use a much smaller value of 0.001 for calculating the idle power of the
 device.
 This value will filter out most transients from the stream to the point
 that even when the device is in use, it will still have only a slight change
 in the filtered stream.
 Averaging the stream computes roughly the idle power of the device.
 
\end_layout

\begin_layout Standard
After we have computed the idle power and the filtered stream, we are ready
 to locate the usages of the devices based on the RFID readings.
 Whenever we detect a tag, we look for the usages on the filtered stream.
 We define the device to be in use whenever the filtered stream is outputing
 a value greater than some threshold determines from the idle power.
 We look for the closest such edge in our filtered stream to find the usage.
 We locate the low-to-high and the high-to-low edge of the usage, integrate
 it and add it to the user's consumption profile.
 
\end_layout

\begin_layout Section
Final deployment and Project requirement
\begin_inset LatexCommand \label{sec:Final-deployment-and}

\end_inset


\end_layout

\begin_layout Subsection
Deployment Scenario
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename finaldeployment.png
	lyxscale 25
	width 100col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Final-deployment-topology}

\end_inset

Final deployment topology
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Figure 
\begin_inset LatexCommand \ref{fig:Final-deployment-topology}

\end_inset

 describes our deployment of SpotLight system in the NESL.
 There are two PM motes on the printer and the coffee machine where PM motes
 send power measurement packets to tree routing relay nodes once per a second.
 Also we placed RFID motes at the backdoor, the printer, and the coffee
 machine where they read TAG IDs as RFID TAGs are within the range.
 As soon as a RFID TAG is detected, they forward it to the tree routing
 relay so that it can reach the base node.
 The base node just sends data packets back to the backend gumstix on which
 SOS messages are translated and slogged to the sensorbase as described
 in 
\begin_inset LatexCommand \ref{sec:Back-end-System}

\end_inset

 
\end_layout

\begin_layout Standard
In the sense of the project requirement, we used 8 MicaZ motes: 1 for the
 base node, 2 for the relay nodes, 3 for the RFID motes, and 2 for the PM
 motes as well as we used the gumstix for the backend.
 And the current deployment shows that the maximum hop count is two.
 As described in 
\begin_inset LatexCommand \ref{sec:Back-end-System}

\end_inset

, the backend sends data to the sensor base on the fly as well.
 And of course, more than two sensing modalities RFID and PowerMeasurement(curre
nt, watts, voltage) are involved.
 
\end_layout

\begin_layout Standard
Some interesting observations are found during 3 weeks intermittent deployment.
 First, the sensorbase returns 
\begin_inset Quotes eld
\end_inset

Fatal Error
\begin_inset Quotes erd
\end_inset

 when the number of rows of a table exceeds 100s of thousands of lines.
 The case will be reported to the administrator.
 In addition, we met lots of SOS kernel panics during the long-term deployment
 which are supposed not to happen.
 And discussed those panic problems with Simon.
 
\end_layout

\begin_layout Section
ResultS
\begin_inset LatexCommand \label{sec:Results}

\end_inset


\end_layout

\begin_layout Subsection
RFID with appliances
\end_layout

\begin_layout Standard
For three days deployment, we collected users' appliance usage profile.
 As described in 
\begin_inset LatexCommand \ref{section}

\end_inset

, we placed two RFID motes at the coffee machine and the printer.
 A simple python retrieving module was used to get and interpret data.
 
\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="6" columns="4">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
UserName
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TimeStamp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date/Time
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Younghun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E0040100004288B9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181758272
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.13/11:11.12
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Younghun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E0040100004288B9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181846901
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.14/11:48.21
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Younghun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E0040100004288B9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181863507
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.14/16:25.07
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Akhi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E004010000429DF7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181858135
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.14/14:55.35
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Akhi
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E004010000429DF7
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181868116
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.14/17:41.56
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Printer-Usage-Profile}

\end_inset

Printer Usage Profile
\end_layout

\end_inset


\begin_inset Float table
wide true
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Tabular
<lyxtabular version="3" rows="4" columns="4">
<features>
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" width="0">
<column alignment="center" valignment="top" leftline="true" rightline="true" width="0">
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
UserName
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TID
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
TimeStamp
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Date/Time
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Younghun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E0040100004288B9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181779440
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.13/17:04.00
\end_layout

\end_inset
</cell>
</row>
<row topline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Younghun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E0040100004288B9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181779441
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.13/17:04.01
\end_layout

\end_inset
</cell>
</row>
<row topline="true" bottomline="true">
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
Younghun
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
14E0040100004288B9
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
1181925106
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Standard
2007.June.15/09:31.46
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{tab:Coffee-Machine-Usage}

\end_inset

Coffee Machine Usage Profile
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Table 
\begin_inset LatexCommand \ref{tab:Printer-Usage-Profile}

\end_inset

,
\begin_inset LatexCommand \ref{tab:Coffee-Machine-Usage}

\end_inset

 illustrate that the SpotLight captures users' appliance usage profile.
 But, in table 
\begin_inset LatexCommand \ref{tab:Coffee-Machine-Usage}

\end_inset

 we can see in the first and the second rows that two continuous time stamps
 are stored, which makes off-line analysis tricky.
 However, one can be smart to cope with it by assuming that users can only
 use an appliance at once per 10 seconds or more.
 But still, there are a couple of factors which make the analysis difficult.
 For example, what happens if one user tags at the coffee machine and the
 other one actually uses it.
 And what happens if someone forgets tagging his or her TAG ID when they
 are using appliances.
 All those issues will be remaining works.
 
\end_layout

\begin_layout Subsection
RFID for determining occupancy
\end_layout

\begin_layout Standard
In oppose to the appliance case, we also deployed a RFID mote at the door
 to determine who are in the lab.
 The simple scheme to determine occupancy is the following.
 Once one tags her/his ID, the system assumes she/he enters.
 Similarly, she/he tags the ID again, it assumes she/he is leaving.
 Although this scheme is simple and sensitive to malicious attacks such
 as 
\begin_inset Quotes eld
\end_inset

forget tagging
\begin_inset Quotes erd
\end_inset

 and 
\begin_inset Quotes eld
\end_inset

multiple tagging at a moment.
\begin_inset Quotes erd
\end_inset

 We could find some interesting occupancy profile by analyzing those information.
 
\end_layout

\begin_layout Standard
Figures 
\begin_inset LatexCommand \ref{fig:Occupancy1}

\end_inset

,
\begin_inset LatexCommand \ref{fig:Occupancy2}

\end_inset

,
\begin_inset LatexCommand \ref{fig:Occupancy3}

\end_inset

 and 
\begin_inset LatexCommand \ref{fig:Occupancy4}

\end_inset

 give participants' occupancy profile, X-axis is time-stamp and 1 implies
 she/he is in and 0 implies that she/he is not in.
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename occupancy1.png
	lyxscale 25
	width 60col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Occupancy1}

\end_inset

Occupancy1
\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename occupancy2.png
	lyxscale 25
	width 60col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Occupancy2}

\end_inset

Occupancy2
\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename occupancy3.png
	lyxscale 25
	width 60col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Occupancy3}

\end_inset

Occupancy3
\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status collapsed

\begin_layout Standard
\align center
\begin_inset Graphics
	filename occupancy4.png
	lyxscale 25
	width 60col%

\end_inset


\end_layout

\begin_layout Caption
\begin_inset LatexCommand \label{fig:Occupancy4}

\end_inset

Occupancy4
\end_layout

\end_inset


\end_layout

\begin_layout Section
Related Work 
\begin_inset LatexCommand \label{sec:Related-Work}

\end_inset


\end_layout

\begin_layout Subsection
Demand Response Enabling Technology Development - UC Berkeley 
\end_layout

\begin_layout Standard
Demand Response 
\begin_inset LatexCommand \cite{berkeley-dr}

\end_inset

 refers to the mechanism by which utility providers can reduce the demand
 for electricity during shortages by setting variable rates based on the
 load with a mechanism for customers to respond to those rates.
 This means that if a customer can defer usage of an appliance to a time
 at which the rate is lower, it would result in a lower cost to the customer
 as well as the utility provider.
 New DR-enabled thermostats are proposed that have metering, communications
 and automatic response mechanisms.
 The new thermostats require the homeowner to program the system once to
 express her preferences for cost versus comfort.
 In addition, appliances include price indicators as familiar red-orange-green
 LEDs to indicate the current price scenario.
 The Berkeley system is deemed fairly close to our measurement of electrical
 energy, but is coarser grained.
 Their system is ?active? in its use of a feedback mechanism, whereas our
 system is designed to be a ?passive? profiling tool for an individual or
 a household.
 The Berkeley system requires communication with the utility provider and
 the provider has access to the energy consumption profile at all times.
 This may lead to privacy concerns.
 
\end_layout

\begin_layout Subsection
Samsung Electronic Company's Smart Building 
\end_layout

\begin_layout Standard
Energy measurement and control system based upon occupancy is not just being
 explored in research but is also being adopted in real life.
 The new building at Samsung Electronic Company Digital Media R&D center,
 opened in Sep.
 2005, is equipped with an RFID based systems for air conditioning and light
 level control.
 Each employee and visitor is required to carry an RFID tag.
 The RFID receivers and back-end systems identify the occupancy level in
 a room based on which the building controls its air conditioning and lighting
 systems.
 This system also helps the authorities track visitors? movements and avoid
 information theft.
 
\end_layout

\begin_layout Standard
In this work, we see that they measure and control the energy consumption
 of sharable electronic appliances.
 The ideas that we would like to explore in this project are similar but
 extend to all appliances that a person may come across.
 
\end_layout

\begin_layout Section
Conclusion 
\begin_inset LatexCommand \label{sec:Conclusion}

\end_inset


\end_layout

\begin_layout Standard
In conclusion, we have shown that energy consumption monitoring at a finer
 granularity of individuals is possible.
 We have carried out such profiling by dividing the commonly found appliances
 into two different classes and described our algorithms for profiling such
 devices.
 Most commonly found appliances fit in this classes of devices while some
 don't.
 An interesting area of future work will be identifying in further detail
 other appliances that do not fall in either category and developing profiling
 algorithms for them and also addressing some of the limitations of our
 application discussed in section 
\begin_inset LatexCommand \ref{sub:Limitations}

\end_inset

.
\begin_inset LatexCommand \bibtex[plain]{splt}

\end_inset


\end_layout

\end_body
\end_document
